<aura:component implements="flexipage:availableForAllPageTypes,flexipage:availableForRecordHome,force:hasRecordId" access="global" 
                controller="FSL_GetSolutions">
    <aura:attribute name="options" type="List" default="[]"/>
     <aura:attribute name="repairOptions" type="List" default="[]"/>
    
    <aura:attribute name="repairValue" type="String" default=""/>
    <aura:attribute name="value" type="String" default=""/>
    <aura:attribute name="recordId" type="String"/>
    <aura:attribute name="selectedIdx" type="Integer" />
    <aura:attribute name="recordTypeName" type="String" />
    <aura:attribute name="solutionRadioHeader" type="String" default=""/>
    <aura:attribute name="solutionRadioValue" type="String" default=""/>
    <aura:attribute name="solutionRepairRadioHeader" type="String" default=""/>
    <aura:registerEvent name="sampleCmpEvent" type="c:FSL_RadiobuttonDisplaySolutionsEvent" />
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    <!-- selectedIdx in child comp>>{!v.selectedIdx} -->
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
      
	<aura:method name="resetRadioButton" description="reset radio button"></aura:method> <!-- 236 changes by Murali 2/15/22-->
 	<aura:if isTrue="{!v.recordTypeName=='SolutionRepair'}"><!--{!v.recordTypeName=='SolutionRepair'}">-->
         <lightning:radioGroup 	  name = "radioGroupRepairRequired"
                                  aura:id = "repairGroup"
                                  label = "{!v.solutionRepairRadioHeader}"
                                  options = "{!v.repairOptions}"
                                  value = "{!v.repairValue}"
                                  type = "radio"
                                  onchange="{!c.repairChange}"
                                  required = "false"/>
                                  
        <aura:set attribute="else">
        <lightning:radioGroup 	  name = "radioGroupRequired"
                                  aura:id = "mygroup"
                                  label = "{!v.solutionRadioHeader}"
                                  options = "{!v.options}"
                                  value = "{!v.value}"
                                  type = "radio"
                                  onchange = "{!c.childComponentEvent }"
                                  required = "true"/>
        </aura:set>
    </aura:if> 
    
    
    <!-- <lightning:radioGroup name = "radioGroupRequired"
                                  aura:id = "mygroup"
                                  label = "DOES THIS LOOK LIKE SOLUTION?"
                                  options = "{!v.options }"
                                  value = "{! v.value }"
                                  type = "radio"
                                  onchange = "{! c.childComponentEvent }"
                                  required = "true"/>-->
    <!--
    
    
    -->
    
</aura:component>