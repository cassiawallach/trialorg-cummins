//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class dbu_EsnSearchResponseWrapper {

    public dbu_EsnSearchResponseWrapper()
    {}
	public class DataArea {
		public List<PartLists> PartLists {get;set;} 

        
		public DataArea(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'PartLists') {
							PartLists = arrayOfPartLists(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'DataArea consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
        
	}
	
	public Header Header {get;set;} 
	public DataArea DataArea {get;set;} 

	public dbu_EsnSearchResponseWrapper(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'Header') {
						Header = new Header(parser);
					} else if (text == 'DataArea') {
						DataArea = new DataArea(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Header {
		public String MessageIdentifier {get;set;} 
		public String ReturnCode {get;set;} 
		public String ReturnCodeDescription {get;set;} 
		public String Status {get;set;} 
		public String MessageType {get;set;} 

		public Header(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'MessageIdentifier') {
							MessageIdentifier = parser.getText();
						} else if (text == 'ReturnCode') {
							ReturnCode = parser.getText();
						} else if (text == 'ReturnCodeDescription') {
							ReturnCodeDescription = parser.getText();
						} else if (text == 'Status') {
							Status = parser.getText();
						} else if (text == 'MessageType') {
							MessageType = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Header consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Parts {
		public String Number_Z {get;set;} // in json: Number
		public String Description {get;set;} 
		public List<String> Systems {get;set;} 

		public Parts(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Number') {
							Number_Z = parser.getText();
						} else if (text == 'Description') {
							Description = parser.getText();
						} else if (text == 'Systems') {
							Systems = arrayOfString(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Parts consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Gaskets {
		public String Number_Z {get;set;} // in json: Number
		public String Description {get;set;} 

		public Gaskets(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'Number') {
							Number_Z = parser.getText();
						} else if (text == 'Description') {
							Description = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Gaskets consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Kits {

		public Kits(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Kits consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class PartLists {
		public String ESN {get;set;} 
		public List<Parts> Parts {get;set;} 
		public List<Kits> Kits {get;set;} 
		public List<Gaskets> Gaskets {get;set;} 

		public PartLists(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'ESN') {
							ESN = parser.getText();
						} else if (text == 'Parts') {
							Parts = arrayOfParts(parser);
						} else if (text == 'Kits') {
							Kits = arrayOfKits(parser);
						} else if (text == 'Gaskets') {
							Gaskets = arrayOfGaskets(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'PartLists consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static dbu_EsnSearchResponseWrapper parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new dbu_EsnSearchResponseWrapper(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }


    private static List<PartLists> arrayOfPartLists(System.JSONParser p) {
        List<PartLists> res = new List<PartLists>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new PartLists(p));
        }
        return res;
    }




    private static List<Kits> arrayOfKits(System.JSONParser p) {
        List<Kits> res = new List<Kits>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Kits(p));
        }
        return res;
    }


    private static List<Gaskets> arrayOfGaskets(System.JSONParser p) {
        List<Gaskets> res = new List<Gaskets>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Gaskets(p));
        }
        return res;
    }





    private static List<Parts> arrayOfParts(System.JSONParser p) {
        List<Parts> res = new List<Parts>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Parts(p));
        }
        return res;
    }


}