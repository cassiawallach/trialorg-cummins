@isTest (SeeAllData = false)
public class CSS_SymEDSSolutions_Test {
    static testMethod void CSS_SymEDSSolutions_Test_Method111(){
        decimal diatime = 0.23;
        String sDTime1 ='2';
        String JSONSols  = '[ ';
        String sStat = '0';
        String sSuffix = '';
        Integer iCounter = 0;
        Boolean blnActive = false;
        boolean failDiagResp =false;
        boolean nestfailDiagResp =false;
        CSS_J2ANestSol_EDS solDet1 = new CSS_J2ANestSol_EDS();
        
        CSS_Job_Order__c rJobOrd = new CSS_Job_Order__c();
        
        
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c job= new CSS_Job_Order__c();
        
        job.INSITE_UpdateTimeStamp__c =system.today();
        job.INSITE_ESN_Choice__c='Not Selected';
        job.Account__c = acc.id;
        job.DSID__c='2323';
        job.ESN__c ='21323';
        job.Application__c='asdd';
        job.Unit_Number__c='213';
        job.Failure_Point__c=213.00;
        job.Failure_Point_Measure__c='asd';
        job.Make__c='Make';
        job.Model__c='Model';
        job.Equipment_ID__c='Equip';
        job.Customer_Name__c='Peterbuilt';
        job.Shop_Work_Order__c='213dssd';
        job.Service_Model__c='SMNNUM';
        job.DSID_Creation_Timestamp__c=system.today();
        job.DSID_Status__c='Stat';
        job.DSID_WorkGroup__c='Wrkgrp';
        job.Status__c = 'Triage & Diagnosis';
        job.Previous_Status__c = 'Review';
        insert job;
        //CSS_Fault_Code__c fc1 = createFaultCode(jobOrder,'441',1,'0','APD-P','234,546');
        CSS_Fault_Code__c fc1 = new CSS_Fault_Code__c(FaultCodeR2__c = '441',Related_Fault_Code__c = '234,546');
        fc1.Name = '441';
        fc1.Job_Order__c = job.Id;
        fc1.Sequence__c = 1;
        fc1.Fault_Code_Type__c = 'APD-P';
        fc1.Mod__c = '0';
        fc1.isPole__c = false;
        insert fc1;
        CSS_SymptomQA__c sym=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='white smoke';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.Option_type__c  ='qwewqe';
        sym.Guide_Question__c  ='Do you see smoke';
        sym.Type__c  ='SearchString';
        insert sym; 
        CSS_SymptomQA__c symQA=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='fault Code';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.SearchString__c  =sym.id;        
        sym.Type__c  ='QA';
        insert symQA;
        CSS_Solutions__c sol=new CSS_Solutions__c();
        sol.Case_Name__c='test';
        sol.Name='test';
        sol.Diagnostic_Response__c='test';
        sol.Repair_Response__c='test';
        sol.Symptom__c=sym.id;
        sol.Service_Job__c=job.id;
        sol.rank__c=0;
        sol.Out_Of_Order__c = false;
        sol.Solution_Title__c = 'test';
        sol.Solution__c ='test';
        sol.Report_Comments__c ='qwewqewqewewqe';
        sol.Diagnostic_notes__c ='asdsadad';
        sol.FaultCode__c = fc1.id;
        insert sol;
        CSS_Solutions__c sol11=new CSS_Solutions__c();
        sol11.Case_Name__c='test';
        sol11.Name='test';
        sol11.Diagnostic_Response__c='test';
        sol11.Repair_Response__c='test';
        sol11.Symptom__c=sym.id;
        sol11.Service_Job__c=job.id;
        sol11.rank__c=0;
        sol11.Out_Of_Order__c = false;
        sol11.Solution_Title__c = 'test';
        sol11.Solution__c ='test';
        sol11.Report_Comments__c ='qwewqewqewewqe';
        sol11.Diagnostic_notes__c ='asdsadad';
        sol11.FaultCode__c = fc1.id;
        sol11.CSS_Nested_Solutions__c=sol.id;
        insert sol11;
        List<CSS_Solutions__c> lstRef =[select id,Name,Diagnostic_Response__c,Repair_Response__c,Symptom__c,Service_Job__c,FaultCode__c from CSS_Solutions__c where Service_Job__c=:job.id];
        
        CSS_Solution_Component__c csc=new CSS_Solution_Component__c();
        csc.Action__c='test';
        csc.Solutions__c=sol.id;
        csc.Service_Job__c=job.id;
        csc.Selected_Component__c=true;
        insert csc;
        CSS_Solution_Component__c csc1=new CSS_Solution_Component__c();
        csc1.Action__c='test';
        csc1.Solutions__c=sol.id;
        csc1.Service_Job__c=job.id;
        csc1.Selected_Component__c=false;
        insert csc1;
        Id recTypeIdpart = css_utility.getRecordTypeId(CSS_Parts_Options__c.sObjectType, 'Parts');
        CSS_Parts_Options__c parts = new CSS_Parts_Options__c();
        parts.recordtypeId = recTypeIdpart;
        parts.Option_Number__c = 'O-111';
        parts.Service_Job__c = job.id;
        parts.selected_part__c = true;
        parts.FailurepartId__c = csc.Id;
        parts.Part_Assignment__c = 'Primary';
        parts.Solutions__c=sol.id;
        insert parts;
        
        CSS_Parts_Options__c parts1 = new CSS_Parts_Options__c();
        parts1.recordtypeId = recTypeIdpart;
        parts1.Option_Number__c = 'O-111';
        parts1.Service_Job__c = job.id;
        parts1.selected_part__c = true;
        parts1.FailurepartId__c = csc1.Id;
        parts1.Part_Assignment__c = 'Primary';
        parts1.Solutions__c=sol.id;
        insert parts1;
        
        List<CSS_Parts_Options__c> lstPart = new List<CSS_Parts_Options__c>();
        lstPart.add(parts);
        lstPart.add(parts1);
        CSS_SRT__c srt=new CSS_SRT__c();
        srt.Solution_Number__c=sol.id;
        srt.Job_Order__c=job.id;
        srt.Type__c = 'Diagnosis';
        srt.SRT_Time__c=0.6;
        insert srt;
        
        CSS_SRT__c srt1=new CSS_SRT__c();
        srt1.Solution_Number__c=sol.id;
        srt1.Job_Order__c=job.id;
        srt1.Type__c = 'Diagnosis';
        srt1.SRT_AccessiblityCheck__c = true;
        srt1.SRT_Time__c=2.0;
        
        insert srt1;
        CSS_SRT__c srtRep=new CSS_SRT__c();
        srtRep.Solution_Number__c=sol.id;
        srtRep.Job_Order__c=job.id;
        srtRep.Type__c = 'Repair';
        srtRep.SRT_AccessiblityCheck__c = true;
        srtRep.SRT_Time__c=0.6;
        insert srtRep;
        CSS_SRT__c srtRep1=new CSS_SRT__c();
        srtRep1.Solution_Number__c=sol.id;
        srtRep1.Job_Order__c=job.id;
        srtRep1.Type__c = 'Repair';
        srtRep1.SRT_Time__c=2.0;
        insert srtRep1;
        List<CSS_Job_Order__c> cssJob=new List<CSS_Job_Order__c>();
        List<CSS_SymptomQA__c> symList=new List<CSS_SymptomQA__c>();
        List<CSS_SymptomQA__c> symList1=new List<CSS_SymptomQA__c>();
        List<CSS_Solutions__c> solList=new List<CSS_Solutions__c>();
        List<CSS_Solution_Component__c> solComp  = new List<CSS_Solution_Component__c>();
        List<CSS_SRT__c> srts = new List<CSS_SRT__c>();
        List<CSS_SRT__c> srtsRep = new List<CSS_SRT__c>();
        symList.add(sym);
        symList1.add(symQA);
        solList.add(sol);
        solComp.add(csc);
        srts.add(srt) ;  
        srtsRep.add(srtRep);
        srts.add(srt1) ;  
        srtsRep.add(srtRep1);
        PageReference pageRef = new PageReference('/apex/JobTndTs?rank=1&id=');
        test.setCurrentPage(pageRef);
        ApexPages.CurrentPage().getParameters().put('Id',job.id);
        ApexPages.CurrentPage().getParameters().put('fcid',fc1.Id);
        ApexPages.CurrentPage().getParameters().put('symid',sym.Id);
        
        
        CSS_SymEDSSolutions  edsSym ;
        edsSym =new CSS_SymEDSSolutions();
        edsSym.nestFailDiagResp = nestFailDiagResp;
        edsSym.solDet1 = solDet1;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster1 = new CSS_JobEventTemporary__c();
        CSS_JobEventTemporary__c qsolRetrivedFCMaster2 = new CSS_JobEventTemporary__c();
        List<CSS_JobEventTemporary__c> qsolRetrivedFCMasters = new List<CSS_JobEventTemporary__c>();
        qsolRetrivedFCMaster1 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMaster2 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster1);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster2);
        edsSym.qsolRetrivedFCMasters = qsolRetrivedFCMasters;
        css_tnd_job  cssTnd = new css_tnd_job();
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new CSS_GetSolDetails_Test());
        
        edsSym.Selectedsol = sol;
       edsSym.rJobOrd = job;
        edsSym.Ins_JobId = job.id;
        edsSym.rank ='0';
        edsSym.solDetFailed=false; 
        edsSym.selectedNestSolTitle ='test';
        edsSym.selectedNestSolTitle1 ='test';
        edsSym.currentNestSolId ='test';
        edsSym.selectedFaulcode = '123';
        edsSym.sKNumber = '1212';
        edsSym.queryFrom ='test';
        edsSym.solErrorMsg = 'asdasdasd';
       
        edsSym.getPartsList();
        Test.stopTest();
         
    }
    static testMethod void CSS_SymEDSSolutions_Test_Method1(){
        decimal diatime = 0.23;
        String sDTime1 ='2';
        String JSONSols  = '[ ';
        String sStat = '0';
        String sSuffix = '';
        Integer iCounter = 0;
        Boolean blnActive = false;
        boolean failDiagResp =false;
        boolean nestfailDiagResp =false;
        CSS_J2ANestSol_EDS solDet1 = new CSS_J2ANestSol_EDS();
        
        CSS_Job_Order__c rJobOrd = new CSS_Job_Order__c();
        
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c job= new CSS_Job_Order__c();
        
        job.INSITE_UpdateTimeStamp__c =system.today();
        job.INSITE_ESN_Choice__c='Not Selected';
        job.Account__c = acc.id;
        job.DSID__c='2323';
        job.ESN__c ='21323';
        job.Application__c='asdd';
        job.Unit_Number__c='213';
        job.Failure_Point__c=213.00;
        job.Failure_Point_Measure__c='asd';
        job.Make__c='Make';
        job.Model__c='Model';
        job.Equipment_ID__c='Equip';
        job.Customer_Name__c='Peterbuilt';
        job.Shop_Work_Order__c='213dssd';
        job.Service_Model__c='SMNNUM';
        job.DSID_Creation_Timestamp__c=system.today();
        job.DSID_Status__c='Stat';
        job.DSID_WorkGroup__c='Wrkgrp';
        job.Status__c = 'Triage & Diagnosis';
        job.Previous_Status__c = 'Review';
        insert job;
        //CSS_Fault_Code__c fc1 = createFaultCode(jobOrder,'441',1,'0','APD-P','234,546');
        CSS_Fault_Code__c fc1 = new CSS_Fault_Code__c(FaultCodeR2__c = '441',Related_Fault_Code__c = '234,546');
        fc1.Name = '441';
        fc1.Job_Order__c = job.Id;
        fc1.Sequence__c = 1;
        fc1.Fault_Code_Type__c = 'APD-P';
        fc1.Mod__c = '0';
        fc1.isPole__c = false;
        insert fc1;
        CSS_SymptomQA__c sym=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='white smoke';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.Option_type__c  ='qwewqe';
        sym.Guide_Question__c  ='Do you see smoke';
        sym.Type__c  ='SearchString';
        insert sym; 
        CSS_SymptomQA__c symQA=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='fault Code';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.SearchString__c  =sym.id;        
        sym.Type__c  ='QA';
        insert symQA;
        CSS_Solutions__c sol=new CSS_Solutions__c();
        sol.Case_Name__c='test';
        sol.Name='test';
        sol.Diagnostic_Response__c='test';
        sol.Repair_Response__c='test';
        sol.Symptom__c=sym.id;
        sol.Service_Job__c=job.id;
        sol.rank__c=0;
        sol.Out_Of_Order__c = false;
        sol.Solution_Title__c = 'test';
        sol.Solution__c ='test';
        sol.Report_Comments__c ='qwewqewqewewqe';
        sol.Diagnostic_notes__c ='asdsadad';
        sol.FaultCode__c = fc1.id;
        insert sol;
        system.debug('Anirudh sol>>>>'+sol.id);
        CSS_Solutions__c sol11=new CSS_Solutions__c();
        sol11.Case_Name__c='test';
        sol11.Name='test';
        sol11.Diagnostic_Response__c='test';
        sol11.Repair_Response__c='test';
        sol11.Symptom__c=sym.id;
        sol11.Service_Job__c=job.id;
        sol11.rank__c=0;
        sol11.Out_Of_Order__c = false;
        sol11.Solution_Title__c = 'test';
        sol11.Solution__c ='test';
        sol11.Report_Comments__c ='qwewqewqewewqe';
        sol11.Diagnostic_notes__c ='asdsadad';
        sol11.FaultCode__c = fc1.id;
        sol11.CSS_Nested_Solutions__c=sol.id;
        insert sol11;
        system.debug('Anirudh sol1>>>>'+sol11.id);
        List<CSS_Solutions__c> lstRef =[select id,Name,Diagnostic_Response__c,Repair_Response__c,Symptom__c,Service_Job__c,FaultCode__c from CSS_Solutions__c where Service_Job__c=:job.id];
        system.debug('Anirudh lstRef>>>>'+lstRef[0].id);
        CSS_Solution_Component__c csc=new CSS_Solution_Component__c();
        csc.Action__c='test';
        csc.Solutions__c=sol.id;
        csc.Service_Job__c=job.id;
        csc.Selected_Component__c=true;
        insert csc;
        CSS_Solution_Component__c csc1=new CSS_Solution_Component__c();
        csc1.Action__c='test';
        csc1.Solutions__c=sol.id;
        csc1.Service_Job__c=job.id;
        csc1.Selected_Component__c=false;
        insert csc1;
        Id recTypeIdpart = css_utility.getRecordTypeId(CSS_Parts_Options__c.sObjectType, 'Parts');
        CSS_Parts_Options__c parts = new CSS_Parts_Options__c();
        parts.recordtypeId = recTypeIdpart;
        parts.Option_Number__c = 'O-111';
        parts.Service_Job__c = job.id;
        parts.selected_part__c = true;
        parts.FailurepartId__c = csc.Id;
        parts.Part_Assignment__c = 'Primary';
        parts.Solutions__c=sol.id;
        insert parts;
        
        CSS_Parts_Options__c parts1 = new CSS_Parts_Options__c();
        parts1.recordtypeId = recTypeIdpart;
        parts1.Option_Number__c = 'O-111';
        parts1.Service_Job__c = job.id;
        parts1.selected_part__c = true;
        parts1.FailurepartId__c = csc1.Id;
        parts1.Part_Assignment__c = 'Primary';
        parts1.Solutions__c=sol.id;
        insert parts1;
        
        List<CSS_Parts_Options__c> lstPart = new List<CSS_Parts_Options__c>();
        lstPart.add(parts);
        lstPart.add(parts1);
        CSS_SRT__c srt=new CSS_SRT__c();
        srt.Solution_Number__c=sol.id;
        srt.Job_Order__c=job.id;
        srt.Type__c = 'Diagnosis';
        srt.SRT_Time__c=0.6;
        insert srt;
        
        CSS_SRT__c srt1=new CSS_SRT__c();
        srt1.Solution_Number__c=sol.id;
        srt1.Job_Order__c=job.id;
        srt1.Type__c = 'Diagnosis';
        srt1.SRT_AccessiblityCheck__c = true;
        srt1.SRT_Time__c=2.0;
        srt1.Job_Order__c=job.id;
        insert srt1;
        CSS_SRT__c srtRep=new CSS_SRT__c();
        srtRep.Solution_Number__c=sol.id;
        srtRep.Job_Order__c=job.id;
        srtRep.Type__c = 'Repair';
        srtRep.SRT_AccessiblityCheck__c = true;
        srtRep.SRT_Time__c=0.6;
        insert srtRep;
        CSS_SRT__c srtRep1=new CSS_SRT__c();
        srtRep1.Solution_Number__c=sol.id;
        srtRep1.Job_Order__c=job.id;
        srtRep1.Type__c = 'Repair';
        srtRep1.SRT_Time__c=2.0;
        insert srtRep1;
        List<CSS_Job_Order__c> cssJob=new List<CSS_Job_Order__c>();
        List<CSS_SymptomQA__c> symList=new List<CSS_SymptomQA__c>();
        List<CSS_SymptomQA__c> symList1=new List<CSS_SymptomQA__c>();
        List<CSS_Solutions__c> solList=new List<CSS_Solutions__c>();
        List<CSS_Solution_Component__c> solComp  = new List<CSS_Solution_Component__c>();
        List<CSS_SRT__c> srts = new List<CSS_SRT__c>();
        List<CSS_SRT__c> srtsRep = new List<CSS_SRT__c>();
        symList.add(sym);
        symList1.add(symQA);
        solList.add(sol);
        solComp.add(csc);
        srts.add(srt) ;  
        srtsRep.add(srtRep);
        srts.add(srt1) ;  
        srtsRep.add(srtRep1);
        PageReference pageRef = new PageReference('/apex/JobTndTs?rank=1&id=');
        test.setCurrentPage(pageRef);
        ApexPages.CurrentPage().getParameters().put('Id',job.id);
        ApexPages.CurrentPage().getParameters().put('fcid',fc1.Id);
        ApexPages.CurrentPage().getParameters().put('symid',sym.Id);
        
        
        CSS_SymEDSSolutions  edsSym ;
        edsSym =new CSS_SymEDSSolutions();
        edsSym.nestFailDiagResp = nestFailDiagResp;
        edsSym.solDet1 = solDet1;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster1 = new CSS_JobEventTemporary__c();
        CSS_JobEventTemporary__c qsolRetrivedFCMaster2 = new CSS_JobEventTemporary__c();
        List<CSS_JobEventTemporary__c> qsolRetrivedFCMasters = new List<CSS_JobEventTemporary__c>();
        qsolRetrivedFCMaster1 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMaster2 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster1);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster2);
        edsSym.qsolRetrivedFCMasters = qsolRetrivedFCMasters;
        css_tnd_job  cssTnd = new css_tnd_job();
        CSS_SymEDSSolutions extsymEds = new CSS_SymEDSSolutions(cssTnd);
        edsSym.Selectedsol = sol;
        extsymEds.Ins_JobId = job.id;
        edsSym.Ins_JobId = job.id;
        edsSym.rank ='0';
        edsSym.solDetFailed=false; 
        edsSym.selectedNestSolTitle ='test';
        edsSym.selectedNestSolTitle1 ='test';
        edsSym.currentNestSolId ='test';
        edsSym.selectedFaulcode = '123';
        edsSym.sKNumber = '1212';
        edsSym.queryFrom ='test';
        edsSym.solErrorMsg = 'asdasdasd';
        //extsymEds.getPartsListCompSol(sol.id);
        extsymEds.getreplacementReasonOptions();
        extsymEds.getPartsList();
        extsymEds.diagnestnotes = '123';
        Date d = system.today();
        // CSS_SymEDSSolutions.getAccountCodes('79464646','12345',d,'engine','4321','CG-123456',d,temp);
        edsSym.selectedSymId = ApexPages.CurrentPage().getParameters().put('symid',sym.Id);
        edsSym.recFaultCode = new List<CSS_Fault_Code__c>();
        extsymEds.closeOutofOrd();
        Test.startTest();
        Test.setMock(HttpCalloutMock.class, new CSS_GetSolDetails_Test());
        extsymEds.getSols();
        CSS_Job_Order__c jobOrder =  CSS_TestData.createJobOrder(true);
        CSS_Solutions__c sols = CSS_TestData.createSolutions(true,jobOrder.id);
        system.debug('Anirudh sols>>>>'+sols.id);
        CSS_SymptomQA__c symp = new CSS_SymptomQA__c();
        symp.name = 'smoke';
        symp.Caption__c = 'smoke';
        symp.Type__c = 'SearchString';
        symp.Job_Order__c = job.id;
        insert symp;
        CSS_SymptomQA__c symp1 = new CSS_SymptomQA__c();
        symp1.name = 'smoke';
        symp1.Caption__c = 'smoke';
        symp1.Type__c = 'SearchString';
        symp1.Job_Order__c = job.id;
        symp1.SearchString__c = symp.id;
        insert symp1;
        sols.symptom__c =symp.id;
        sols.rank__c =1;
        update sols;
        css_solutions__c Selectedsol = new css_solutions__C();
        
        Selectedsol = [select Id,Symptom__r.isPole__c,No_Access_SRT_required__c,Out_Of_Order__c,Diagnosis_Icon__c,Name,Rank__c,Out_Of_Order_Popup_displayed__c,Solution_Title__c, Solution__c,FaultCode__r.Name,FaultCode__c,Diagnostic_Response__c,Repair_Response__c,Report_Comments__c,Diagnostic_notes__c, (select Id,FaultCode__r.isPole__c,Symptom__r.isPole__c,Diagnosis_Icon__c,Name,Rank__c,Solution_Title__c, Solution__c,FaultCode__r.Name,FaultCode__c,Diagnostic_Response__c,Repair_Response__c,Diagnostic_notes__c from CSS_Solutions__r)from CSS_Solutions__c where Symptom__c = :symp.id and CSS_Nested_Solutions__c = null order by Rank__c];    
        extsymEds.Selectedsol = Selectedsol;
        extsymEds.partdispjbp = lstPart;extsymEds.serviceJob = jobOrder;
        extsymEds.comp = solComp;
        extsymEds.getUpdatedsolsDets();
        extsymEds.UpdateSolNotes();
        extsymEds.validateResponse();
        extsymEds.selectedNestSolId=sols.id;
        extsymEds.getSolutionDetails();
        extsymEds.getRefreshedSols();
        extsymEds.getSolutionDetails();
        
        
        extsymEds.prevSolution();
        extsymEds.rank = '1';
        extsymEds.nextSolution();
        extsymEds.faultCodeClick();
        extsymEds.ispopupReq();
        extsymEds.ContinueToRepair();
        extsymEds.refreshPartsList();
        CSS_SymSolDetails newSymSolsController = new CSS_SymSolDetails();
        newSymSolsController.rank = '1';
        newSymSolsController.selectedSolId = sol.id;
        sol.rank__c = 1;
        update sol;
        newSymSolsController.getSolutionDetails();
        
        Test.stopTest();
        cssJob = [Select Id, ESN__c,DSID__C,ESN_Insite__c,INSITE_UpdateTimeStamp__c,INSITE_ESN_Choice__c,Status__c,Previous_Status__c from CSS_Job_Order__c where id= :job.id];
        job.Status__c = 'Triage & Diagnosis';   
        update job;
        extsymEds.returnToFCView();
        CSS_SymEDSSolutions.solWrapper solwrap = new CSS_SymEDSSolutions.solWrapper('test','Akhil','test',job.id);
        //teste cover 
        string json = '{"key":"1234","message":"This is a test","messageArg":["a","b"],"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}],"repCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}],"verCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}]}';
        CSS_J2ASolution_EDS r = CSS_J2ASolution_EDS.parse(json);
        extsymEds.getUpdatedNestedSols(r);
        CSS_Fault_Code__c fc = new CSS_Fault_Code__c(FaultCodeR2__c = '441',Related_Fault_Code__c = '546');
        fc.Name = 'jobOrder';
        fc.Job_Order__c = job.id;
        fc.Sequence__c = 1;
        fc.Fault_Code_Type__c = '0';
        fc.Mod__c = 'APD-P';
        fc.isPole__c = false;
        insert fc;
        CSS_Solutions__c sol1 = new CSS_Solutions__c();
        sol1.FaultCode__c = fc.Id;
        sol1.Service_Job__c = job.Id;
        sol1.Name = 'Sample Case Name';
        sol1.Case_Name__c = 'Sample Case Name';
        sol1.Solution_Title__c = 'title';
        sol1.Rank__c =0;
        insert sol1;
        extsymEds.selectedSol = sol1;
        system.debug('-->sol1<--'+sol1);
        try {extsymEds.addSolComponentsAndVerSols(sol1, r);} catch(Exception e){}
        extsymEds.addNestedSolsComponents();
        extsymEds.reportProblemComments();
        extsymEds.closeOutofOrder();
        //extsymEds.ContinueToRepairNested();
        /*  extsymEds.UpdateNestedSolNotes();
extsymEds.closeOutofOrder();
extsymEds.nestFailDiagResp = true;  
extsymEds.getPartsList();  
extsymEds.getreplacementReasonOptions(); 
extsymEds.getSRTComponentOnLoad();
extsymEds.rJobOrd.Service_Model__c=null;
extsymEds.getSRTComponentOnLoad();
CSS_SymEDSSolutions.sStrQASolWrap chiClsRef = new CSS_SymEDSSolutions.sStrQASolWrap();
try{ extsymEDS.reportProblemComments();}catch(Exception ex){}*/
    }
    public List<sStrQASolWrap> fList{set;get;}
    sStrQASolWrap sWrapLst;        
    List<CSS_SymptomQA__c> allRecList = new List<CSS_SymptomQA__c>();
    
    public class sStrQASolWrap {            
        public CSS_SymptomQA__c sSearch{set;get;} 
        public list<CSS_SymptomQA__c> sQAWrap{set;get;} 
        public list<CSS_Solutions__c> sSolWrap{set;get;}             
        
        Public sStrQASolWrap(){                
            sSearch = new CSS_SymptomQA__c();
            sQAWrap = new list<CSS_SymptomQA__c>();
            sSolWrap = new list<CSS_Solutions__c>();
        }
    }
    public static CSS_Fault_Code__c createFaultCode(CSS_Job_Order__c job, String fcCode,Integer seq,String mod,String fcType,String relFC){
        CSS_Fault_Code__c fc = new CSS_Fault_Code__c(FaultCodeR2__c = fcCode,Related_Fault_Code__c = relFC);
        fc.Name = fcCode;
        fc.Job_Order__c = job.Id;
        fc.Sequence__c = seq;
        fc.Fault_Code_Type__c = fcType;
        fc.Mod__c = mod;
        fc.isPole__c = false;
        insert fc;
        return fc;
    } 
    
    
    
    public Class NestedSolutionsClass {
        public CSS_J2ASolution_EDS.verCompoundSolutions repCompSol{get;set;} 
        public CSS_Solutions__c solRec{set;get;}
        
        //constructor
        public NestedSolutionsClass(CSS_J2ASolution_EDS.verCompoundSolutions nestSol,CSS_Solutions__c sol){
            this.repCompSol = nestSol;
            this.solRec = sol;
        }
        
    }
    static testmethod void css_SymEDSSolution_Method(){
        CSS_SymEDSSolutions  edsSym1 = new CSS_SymEDSSolutions();
        /* PageReference pageRef = Page.;
Test.setCurrentPage(pageRef);
pageRef.getParameters().put('id',testOppty.id);*/
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c jobRef  = CSS_TestData.createJobOrder(true);
        jobRef.Account__c = acc.id;
        update jobRef;
        
        edsSym1.Ins_JobId=jobRef.Id;
        CSS_Solutions__c  solRef = CSS_TestData.createSolutions(true,jobRef.id);
        edsSym1.selectedNestSolId=solRef.id;
        string selectedSymId ='solRef.id';
        CSS_Solutions__c lstSolRef =[select Id,Diagnostic_Response__c,No_Access_SRT_required__c,Diagnostic_notes__c from CSS_Solutions__c where id=:solRef.id];
        CSS_srt__c Css_str= new CSS_srt__c(Job_order__c=jobRef.Id,srt_id__c='',Type__c='test',step_id__c='test',SRT_Title__c='test',SRT_Details__c='test',SRT_Quantity__c=1.23,SRT_AccessiblityCheck__c=true,Solution_Number__c=solRef.Id);
        insert Css_str;
        lstSolRef.Diagnostic_Response__c='TestClassData';
        lstSolRef.Diagnostic_notes__c='TestClassData';
        update lstSolRef;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster = new CSS_JobEventTemporary__c();
        qsolRetrivedFCMaster = CSS_TestData.createJobEventTempObj(true);
        edsSym1.qsolRetrivedFCMaster = qsolRetrivedFCMaster;
        PageReference pageRef;
        Test.startTest();
        pageRef = edsSym1.qsolredirect(); 
        edsSym1.qsolRetrivedFCMaster.File_Name__c=null;
        edsSym1.qsolredirect();
        edsSym1.JobsolutionId=lstSolRef.id;
        edsSym1.correctplusStylClass='';
        edsSym1.remCharcounter=1;
        edsSym1.remCharcounterNest=1;
        edsSym1.getUpdatedsolsDets();
        edsSym1.selectedSol=solRef;
        //edsSym1.rank ='6';
        edsSym1.nextSolution();
        edsSym1.rank='1';
        //edsSym1.nestValidateResponse();
        edsSym1.UpdateSolNotes();
        //edsSym1.updateSol(lstSolRef.id,'solDiagnose','solDiagnoseNotes');
        edsSym1.UpdateNestSolNotes();
        CSS_Solutions__c solutionref= CSS_TestData.createSolutions(true,jobRef.id);
        edsSym1.selectedNestSol=null;
        solutionref.Diagnostic_notes__c='';
        update solutionref; 
        edsSym1.selectedNestSolId=solutionref.id;
        edsSym1.UpdateNestSolNotes();
        edsSym1.rank='1';
         edsSym1.rJobOrd = jobRef;
        edsSym1.UpdateSolNotes();
        edsSym1.ContinueToRepair();
        //edsSym1.getNestSolutionDetails();
        Test.stopTest();
    }
    static testmethod void css_SymEDSSolution_Methodnew(){
        CSS_SymEDSSolutions  edsSym1 = new CSS_SymEDSSolutions();
        /* PageReference pageRef = Page.;
Test.setCurrentPage(pageRef);
pageRef.getParameters().put('id',testOppty.id);*/
        
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c jobRef  = CSS_TestData.createJobOrder(true);
        jobRef.Account__c = acc.id;
        update jobRef;
        
        edsSym1.Ins_JobId=jobRef.Id;
        CSS_Solutions__c  solRef = CSS_TestData.createSolutions(true,jobRef.id);
        edsSym1.selectedNestSolId=solRef.id;
        string selectedSymId ='solRef.id';
        CSS_Solutions__c lstSolRef =[select Id,Diagnostic_Response__c,No_Access_SRT_required__c,Diagnostic_notes__c from CSS_Solutions__c where id=:solRef.id];
        CSS_srt__c Css_str= new CSS_srt__c(Job_order__c=jobRef.Id,srt_id__c='',Type__c='test',step_id__c='test',SRT_Title__c='test',SRT_Details__c='test',SRT_Quantity__c=1.23,SRT_AccessiblityCheck__c=true,Solution_Number__c=solRef.Id);
        insert Css_str;
        lstSolRef.Diagnostic_Response__c='TestClassData';
        lstSolRef.Diagnostic_notes__c='TestClassData';
        update lstSolRef;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster = new CSS_JobEventTemporary__c();
        qsolRetrivedFCMaster = CSS_TestData.createJobEventTempObj(true);
        edsSym1.qsolRetrivedFCMaster = qsolRetrivedFCMaster;
        PageReference pageRef;
        Test.startTest();
       // pageRef = edsSym1.qsolredirect(); 
        edsSym1.qsolRetrivedFCMaster.File_Name__c=null;
        //edsSym1.qsolredirect();
        edsSym1.JobsolutionId=lstSolRef.id;
        edsSym1.correctplusStylClass='';
        edsSym1.remCharcounter=1;
        edsSym1.remCharcounterNest=1;
        //edsSym1.getUpdatedsolsDets();
        edsSym1.selectedSol=solRef;
        edsSym1.rJobOrd = jobRef;
        edsSym1.Out_Of_Order_Popup_displayed = false;
        edsSym1.displayOutofOrder = false;
        edsSym1.rank ='6';
        edsSym1.nextSolution();
        edsSym1.prevSolution();
        string json = '{"key":"1234","message":"This is a test","messageArg":["a","b"],"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}],"repCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}],"verCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}]}';
        CSS_J2ASolution_EDS r = CSS_J2ASolution_EDS.parse(json);
        edsSym1.selectedNestSolTitle='test';
        CSS_SymEDSSolutions.NestedSolutionsClass nsc = new CSS_SymEDSSolutions.NestedSolutionsClass(r.verCompoundSolutions[0],lstSolRef);
       edsSym1.selectedNestSol=nsc;
        Boolean b = edsSym1.nestValidateResponse();
        edsSym1.rank='1';
        //edsSym1.nestValidateResponse();
        //edsSym1.UpdateSolNotes();
        //edsSym1.updateSol(lstSolRef.id,'solDiagnose','solDiagnoseNotes');
        //edsSym1.UpdateNestSolNotes();
        CSS_Solutions__c solutionref= CSS_TestData.createSolutions(true,jobRef.id);
        edsSym1.selectedNestSol=null;
        solutionref.Diagnostic_notes__c='';
        update solutionref; 
        edsSym1.selectedNestSolId=solutionref.id;
        //edsSym1.UpdateNestSolNotes();
        edsSym1.rank='1';
       // edsSym1.UpdateSolNotes();
        //edsSym1.getNestSolutionDetails();
        Test.stopTest();
    }
    static  testmethod  void getNestSolutionDetailstest(){
        CSS_SymEDSSolutions  edsSym1 = new CSS_SymEDSSolutions();
        CSS_Job_Order__c jobRef =CSS_TestData.createJobOrder(true);
        CSS_Solutions__c solRef = CSS_TestData.createSolutions(true,jobRef.id);
        
    }
    static testmethod void qsolDocs() {
        CSS_Job_Order__c JO = CSS_TestData.createJobOrder(true);
        CSS_SymEDSSolutions  edsSym2 = new CSS_SymEDSSolutions();
        CSS_accountLanguage__c accountlang = new CSS_accountLanguage__c();
        accountlang.Name = 'Test';
        accountlang.CSS_QsolLanguage__c = 'en';
        insert accountlang;
        edsSym2.accountlang = accountlang;
        edsSym2.rJobOrd = JO;
        CSS_TestData.createIntegrationDetails(true);
        CSS_quickserveCumminsComWebservices.ArrayOfWarrantyDoc rQSOLDocs = new CSS_quickserveCumminsComWebservices.ArrayOfWarrantyDoc();
        string sQSOLConn = CSS_getConnnectionDetails.getConnection('QSOL').Key__c;                    
        List<CSS_quickserveCumminsComWebservices.WarrantyDoc> wCAMTSBTRB = new List<CSS_quickserveCumminsComWebservices.WarrantyDoc>();
        CSS_quickserveCumminsComWebservices.QSOLServicePortSoap11 wsCall = new CSS_quickserveCumminsComWebservices.QSOLServicePortSoap11();                                    
        Test.setMock(WebServiceMock.class, new CSS_GetWarrantyDocs_Test());
        Test.startTest();
        edsSym2.getQSOLDocs(); 
        edsSym2.getQSOLDocs_Existing();
        Test.stopTest();
        
    }
    static testMethod void CSS_SymEDSSolutions_Test_AccountCodes(){
        decimal diatime = 0.23;
        String sDTime1 ='2';
        String JSONSols  = '[ ';
        String sStat = '0';
        String sSuffix = '';
        Integer iCounter = 0;
        Boolean blnActive = false;
        boolean failDiagResp =false;
        boolean nestfailDiagResp =false;
        CSS_J2ANestSol_EDS solDet1 = new CSS_J2ANestSol_EDS();
        
        CSS_Job_Order__c rJobOrd = new CSS_Job_Order__c();
        
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c job= new CSS_Job_Order__c();
        
        job.INSITE_UpdateTimeStamp__c =system.today();
        job.Account__c = acc.id;
        job.INSITE_ESN_Choice__c='Not Selected';
        job.DSID__c='2323';
        job.ESN__c ='21323';
        job.Application__c='asdd';
        job.Unit_Number__c='213';
        job.Failure_Point__c=213.00;
        job.Failure_Point_Measure__c='asd';
        job.Make__c='Make';
        job.Model__c='Model';
        job.Equipment_ID__c='Equip';
        job.Customer_Name__c='Peterbuilt';
        job.Shop_Work_Order__c='213dssd';
        job.Service_Model__c='SMNNUM';
        job.DSID_Creation_Timestamp__c=system.today();
        job.DSID_Status__c='Stat';
        job.DSID_WorkGroup__c='Wrkgrp';
        job.Status__c = 'Triage & Diagnosis';
        job.Previous_Status__c = 'Review';
        insert job;
        //CSS_Fault_Code__c fc1 = createFaultCode(jobOrder,'441',1,'0','APD-P','234,546');
        CSS_Fault_Code__c fc1 = new CSS_Fault_Code__c(FaultCodeR2__c = '441',Related_Fault_Code__c = '234,546');
        fc1.Name = '441';
        fc1.Job_Order__c = job.Id;
        fc1.Sequence__c = 1;
        fc1.Fault_Code_Type__c = 'APD-P';
        fc1.Mod__c = '0';
        fc1.isPole__c = false;
        insert fc1;
        CSS_SymptomQA__c sym=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='white smoke';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.Option_type__c  ='qwewqe';
        sym.Guide_Question__c  ='Do you see smoke';
        sym.Type__c  ='SearchString';
        insert sym; 
        CSS_SymptomQA__c symQA=new CSS_SymptomQA__c();
        sym.Job_Order__c=job.id;
        sym.caption__c ='fault Code';
        sym.Option1__c  ='12213';
        sym.Job_Order__c  =job.id;
        sym.SearchString__c  =sym.id;        
        sym.Type__c  ='QA';
        insert symQA;
        CSS_Solutions__c sol=new CSS_Solutions__c();
        sol.Case_Name__c='test';
        sol.Name='test';
        sol.Diagnostic_Response__c='test';
        sol.Repair_Response__c='test';
        sol.Symptom__c=sym.id;
        sol.Service_Job__c=job.id;
        sol.rank__c=0;
        sol.Out_Of_Order__c = false;
        sol.Solution_Title__c = 'test';
        sol.Solution__c ='test';
        sol.Report_Comments__c ='qwewqewqewewqe';
        sol.Diagnostic_notes__c ='asdsadad';
        sol.FaultCode__c = fc1.id;
        insert sol;
        CSS_Solutions__c lstRef =[select id,Name,Diagnostic_Response__c,Repair_Response__c,Symptom__c,Service_Job__c,FaultCode__c from CSS_Solutions__c where Service_Job__c=:job.id];
        
        CSS_Solution_Component__c csc=new CSS_Solution_Component__c();
        csc.Action__c='test';
        csc.Solutions__c=sol.id;
        csc.Service_Job__c=job.id;
        csc.Selected_Component__c=true;
        csc.System_Code__c = 'TH';
        csc.Component_Code__c = 'AC';
        csc.AccountCode__c = 'NEW PARTS WARRANTY 62';
        insert csc;
        CSS_Solution_Component__c csc1=new CSS_Solution_Component__c();
        csc1.Action__c='test';
        csc1.Solutions__c=sol.id;
        csc1.Service_Job__c=job.id;
        csc1.Selected_Component__c=false;
        insert csc1;
        Id recTypeIdpart = css_utility.getRecordTypeId(CSS_Parts_Options__c.sObjectType, 'Parts');
        CSS_Parts_Options__c parts = new CSS_Parts_Options__c();
        parts.recordtypeId = recTypeIdpart;
        parts.Option_Number__c = 'O-111';
        parts.Service_Job__c = job.id;
        parts.selected_part__c = true;
        parts.FailurepartId__c = csc.Id;
        parts.Part_Assignment__c = 'Primary';
        parts.Solutions__c=sol.id;
        insert parts;
        
        CSS_Parts_Options__c parts1 = new CSS_Parts_Options__c();
        parts1.recordtypeId = recTypeIdpart;
        parts1.Option_Number__c = 'O-111';
        parts1.Service_Job__c = job.id;
        parts1.selected_part__c = true;
        parts1.FailurepartId__c = csc1.Id;
        parts1.Part_Assignment__c = 'Primary';
        parts1.Solutions__c=sol.id;
        insert parts1;
        
        List<CSS_Parts_Options__c> lstPart = new List<CSS_Parts_Options__c>();
        lstPart.add(parts);
        lstPart.add(parts1);
        CSS_SRT__c srt=new CSS_SRT__c();
        srt.Solution_Number__c=sol.id;
        srt.Job_Order__c=job.id;
        srt.Type__c = 'Diagnosis';
        srt.SRT_Time__c=0.6;
        insert srt;
        
        CSS_SRT__c srt1=new CSS_SRT__c();
        srt1.Solution_Number__c=sol.id;
        srt1.Job_Order__c=job.id;
        srt1.Type__c = 'Diagnosis';
        srt1.SRT_Time__c=2.0;
        insert srt1;
        CSS_SRT__c srtRep=new CSS_SRT__c();
        srtRep.Solution_Number__c=sol.id;
        srtRep.Job_Order__c=job.id;
        srtRep.Type__c = 'Repair';
        srtRep.SRT_Time__c=0.6;
        insert srtRep;
        CSS_SRT__c srtRep1=new CSS_SRT__c();
        srtRep1.Solution_Number__c=sol.id;
        srtRep1.Job_Order__c=job.id;
        srtRep1.Type__c = 'Repair';
        srtRep1.SRT_Time__c=2.0;
        insert srtRep1;
        List<CSS_Job_Order__c> cssJob=new List<CSS_Job_Order__c>();
        List<CSS_SymptomQA__c> symList=new List<CSS_SymptomQA__c>();
        List<CSS_SymptomQA__c> symList1=new List<CSS_SymptomQA__c>();
        List<CSS_Solutions__c> solList=new List<CSS_Solutions__c>();
        List<CSS_Solution_Component__c> solComp  = new List<CSS_Solution_Component__c>();
        List<CSS_SRT__c> srts = new List<CSS_SRT__c>();
        List<CSS_SRT__c> srtsRep = new List<CSS_SRT__c>();
        symList.add(sym);
        symList1.add(symQA);
        solList.add(sol);
        solComp.add(csc);
        srts.add(srt) ;  
        srtsRep.add(srtRep);
        srts.add(srt1) ;  
        srtsRep.add(srtRep1);
        PageReference pageRef = new PageReference('/apex/JobTndTs?rank=1&id=');
        test.setCurrentPage(pageRef);
        ApexPages.CurrentPage().getParameters().put('Id',job.id);
        ApexPages.CurrentPage().getParameters().put('fcid',fc1.Id);
        ApexPages.CurrentPage().getParameters().put('symid',sym.Id);
        
        
        CSS_SymEDSSolutions  edsSym ;
        edsSym =new CSS_SymEDSSolutions();
        edsSym.nestFailDiagResp = nestFailDiagResp;
        edsSym.solDet1 = solDet1;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster1 = new CSS_JobEventTemporary__c();
        CSS_JobEventTemporary__c qsolRetrivedFCMaster2 = new CSS_JobEventTemporary__c();
        List<CSS_JobEventTemporary__c> qsolRetrivedFCMasters = new List<CSS_JobEventTemporary__c>();
        qsolRetrivedFCMaster1 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMaster2 = CSS_TestData.createJobEventTempObj(true);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster1);
        qsolRetrivedFCMasters.add(qsolRetrivedFCMaster2);
        edsSym.qsolRetrivedFCMasters = qsolRetrivedFCMasters;
        css_tnd_job  cssTnd = new css_tnd_job();
        CSS_SymEDSSolutions extsymEds = new CSS_SymEDSSolutions(cssTnd);
        
        extsymEds.Ins_JobId = job.id;
        edsSym.rank ='0';
        edsSym.solDetFailed=false; 
        edsSym.selectedNestSolTitle ='test';
        edsSym.selectedNestSolTitle1 ='test';
        edsSym.currentNestSolId ='test';
        edsSym.selectedFaulcode = '123';
        edsSym.sKNumber = '1212';
        edsSym.queryFrom ='test';
        edsSym.solErrorMsg = 'asdasdasd';
        //extsymEds.getPartsListCompSol(sol.id);
        Date d = system.today();
        List<id> lstChildIds = new List<id>();
        lstChildIds.add(parts.id);
        lstChildIds.add(parts1.id);
        /*CSS_SymEDSSolutions.srtPartWrapper partWrap = new CSS_SymEDSSolutions.srtPartWrapper(parts.id,sol.id,false,'partName',5,9,'replacementReason');
        CSS_SymEDSSolutions.srtPartWrapper partWrap1 = new CSS_SymEDSSolutions.srtPartWrapper(parts1.id,sol.id,false,'partName',6,8,'replacementReason1');
        extsymEds.listsrtPartWrapper.add(partWrap);
        extsymEds.listsrtPartWrapper.add(partWrap1);
        CSS_SymEDSSolutions.srtCompWrapper srtCompWrap = new CSS_SymEDSSolutions.srtCompWrapper(csc.id,csc.Selected_Component__c,csc.Name,lstChildIds,extsymEds.listsrtPartWrapper,csc.solutions__r.FaultCode__c,csc.System_Code__c,csc.Component_Code__c,csc.AccountCode__c); 
        CSS_SymEDSSolutions.srtCompWrapper srtCompWrap1 = new CSS_SymEDSSolutions.srtCompWrapper(csc1.id,csc1.Selected_Component__c,csc1.Name,lstChildIds,extsymEds.listsrtPartWrapper,csc1.solutions__r.FaultCode__c,csc1.System_Code__c,csc1.Component_Code__c,csc1.AccountCode__c); */
        //system.debug('srtCompWrap**'+srtCompWrap);
        //extsymEds.listsrtCompWrapper.add(srtCompWrap);
        //extsymEds.listsrtCompWrapper.add(srtCompWrap1);
        List<CSS_SymEDSSolutions.srtCompWrapper> listsrtCompWrapper = new List<CSS_SymEDSSolutions.srtCompWrapper>();
       // listsrtCompWrapper.add(srtCompWrap);
       // listsrtCompWrapper.add(srtCompWrap1);
        String temp = JSON.serialize(listsrtCompWrapper);
        // CSS_SymEDSSolutions.getAccountCodes('79464646','12345',02/01/2019,'engine','4321','CG-123456',system.today(),'temp','Y' ,'reconFlag', ' Name');
        extsymEds.partssave(listsrtCompWrapper);
        string json = '{"key":"1234","message":"This is a test","messageArg":["a","b"],"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}],"repCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}],"verCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}]}';
        // CSS_J2ASolution_EDS r = CSS_J2ASolution_EDS.parse(json);
        //extsymEds.getUpdatedNestedSols(r);
        Test.setMock(HttpCalloutMock.class, new CSS_RepeatVisitAck_Test());
        //extsymEds.getNestSolutionDetails();
    }
    static testmethod void css_SymEDSSolution_Method22(){
        CSS_SymEDSSolutions  edsSym1 = new CSS_SymEDSSolutions();
        /* PageReference pageRef = Page.;
Test.setCurrentPage(pageRef);
pageRef.getParameters().put('id',testOppty.id);*/
        
        Account acc = new Account();
        acc.name='Kenworth Sales Co';
        acc.CSS_DistributorCode__c='02466';
        acc.IAM_Service_Provider_Code__c='19134';
        acc.Type='Dealer Account';
        acc.CMI_Account_Status__c = 'Active';
        insert acc;
        
        CSS_Job_Order__c jobRef  = CSS_TestData.createJobOrder(true);
        jobRef.Account__c = acc.id;
        update jobRef;
        edsSym1.Ins_JobId=jobRef.Id;
        CSS_Solutions__c  solRef = CSS_TestData.createSolutions(true,jobRef.id);
        List<CSS_Solutions__c> lstSol = new List<CSS_Solutions__c>();
        lstSol.add(solRef);
        edsSym1.selectedNestSolId=solRef.id;
        string selectedSymId ='solRef.id';
        CSS_Solutions__c lstSolRef =[select Id,Diagnostic_Response__c,No_Access_SRT_required__c,Diagnostic_notes__c from CSS_Solutions__c where id=:solRef.id];
        CSS_srt__c Css_str= new CSS_srt__c(Job_order__c=jobRef.Id,srt_id__c='',Type__c='test',step_id__c='test',SRT_Title__c='test',SRT_Details__c='test',SRT_Quantity__c=1.23,SRT_AccessiblityCheck__c=true,Solution_Number__c=solRef.Id);
        insert Css_str;
        lstSolRef.Diagnostic_Response__c='TestClassData';
        lstSolRef.Diagnostic_notes__c='TestClassData';
        update lstSolRef;
        CSS_JobEventTemporary__c qsolRetrivedFCMaster = new CSS_JobEventTemporary__c();
        qsolRetrivedFCMaster = CSS_TestData.createJobEventTempObj(true);
        edsSym1.qsolRetrivedFCMaster = qsolRetrivedFCMaster;
        PageReference pageRef;
        Test.setMock(HttpCalloutMock.class, new CSS_RepeatVisitAck_Test());
        Test.startTest();
        pageRef = edsSym1.qsolredirect(); 
        
        edsSym1.JobsolutionId=lstSolRef.id;
        edsSym1.correctplusStylClass='';
        edsSym1.remCharcounter=1;
        edsSym1.remCharcounterNest=1;
        edsSym1.rJobOrd = jobRef;
        edsSym1.Out_Of_Order_Popup_displayed=false;
        edsSym1.selectedSol=solRef;
        edsSym1.rank ='6';
        //edsSym1.nextSolution();
        string json = '{"key":"1234","message":"This is a test","messageArg":["a","b"],"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}],"repCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}],"verCompoundSolutions":[{"solutionNumber":"K74452217","solutionTitle":"Fault Code 122 triggered by another fault code","coreIssue":"There are some instances when a fault code is recorded, but is strongnotstrong the first fault code that should be diagnosed.  br ","modificationDate":"01022016","status":"success","verification":"strongConditionsstrong ulliTurn keyswitch ON.liliConnect INSITE electronic service tool.liulstrongActionstrongbr Check for active fault codes. ulliUse INSITE electronic service tool to read the fault codes.liulstrongSpecificationstrong ulliIf Fault Code 227, 352, or 386 is active, then perform a search on the appropriate fault and troubleshoot that fault prior to troubleshooting Fault Code 122.liul","resolution":"pPerform a search on the appropriate fault code.p","poleLogicSolution":true,"components":[{"value":"string","failureId":"string"}]}]}';
        CSS_J2ASolution_EDS r = CSS_J2ASolution_EDS.parse(json);
        edsSym1.selectedNestSolTitle='test';
        CSS_SymEDSSolutions.NestedSolutionsClass nsc = new CSS_SymEDSSolutions.NestedSolutionsClass(r.verCompoundSolutions[0],lstSolRef);
        map<string,CSS_SymEDSSolutions.NestedSolutionsClass> respNestedSolutionsMap = new map<string,CSS_SymEDSSolutions.NestedSolutionsClass>();
        respNestedSolutionsMap.put('test', nsc);
        edsSym1.respNestedSolutionsMap=respNestedSolutionsMap;
        edsSym1.rJobOrd = jobRef;
        edsSym1.solDetails = lstSol;
        edsSym1.getNestSolutionDetails();
        edsSym1.ContinueToRepairNested();
        edsSym1.solDetFailed = false;
        edsSym1.AccessSrtdisableNested();
        edsSym1.deletesolCompNparts();
        edsSym1.deleteNestedSolCompNparts();
        Test.stopTest();
    }
}