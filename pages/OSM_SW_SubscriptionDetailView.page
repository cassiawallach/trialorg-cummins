<apex:page controller="OSM_SW_SubscriptionDetailView_Ctrl" sidebar="false" showHeader="false" standardStylesheets="false" applyHtmlTag="false" >

    <script>
     CCRZ.uiProperties.SubscriptionDetailView.desktop.tmpl = 'SubscriptionDetail-View-Both-New'; 
        CCRZ.uiProperties.SubscriptionDetailView.phone.tmpl = 'SubscriptionDetail-View-Both-New';   
    </script>

<script id="SubscriptionDetail-View-Both-New" type="text/template">
    <div class="panel panel-default cc_panel cc_myaccount_subscription_detail">
     <div class="panel-heading cc_heading">
      <h3 class="panel-title cc_title">{{pageLabelMap 'MyAccount_MySubscriptions_Title'}}</h3>
     </div>
     <div class="panel-body cc_body cc_myaccount_content">
      <div class="messagingSection-invoice-Error" style="display: none"></div>
      <div class="messagingSection-invoice-Warning" style="display: none"></div>
      <div class="messagingSection-invoice-Info" role="alert" style="display: none">
       <button type="button" class="close cc_close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&#215;</span></button>
      </div>
      
      {{#if this.loaded}}
       <div class="row">
        <div class="col-xs-12">
         <div class="invoiceContainer cc_invoice_action_container">
          <p class="panel-body pull-right cc_action_buttons">
           <a href="javascript:void(0);" class="mySubscriptions cc_my_subscriptions">{{pageLabelMap 'MySubscriptions_MySubscriptionsBtn'}}</a>
          </p>
         </div>
        </div>
       </div>
       <div class="row ">
            <div class="col-xs-5">
            {{#if this.mockDisplayProduct}}
                {{#ifEquals this.displayProductName ""}}
                    <span class="cc_subscription_product_label">
                 <!-- Upgrade Issue - Solved -->
                    {{productLink this.mockDisplayProduct 'cc_prod_link' text=(displayProductName displayProductName  )}}
                        
                    </span>
                {{else}}
                    <span class="cc_subscription_product_label">
                        <!-- Upgrade Issue - Solved -->
                        {{productLink this.mockDisplayProduct 'cc_prod_link' text=(displayProductName displayProductName  )}}
                                                                                   
                    </span>
                {{/ifEquals}}
                {{/if}}
                </div> 
                
       </div>
        <br/>
       <div class="row cc_img_row">
        <div class="col-xs-4">
            <!-- Upgrade Issue - Solved -->
            {{#if this.mockDisplayProduct}}
                {{productLink this.mockDisplayProduct 'cc_subscription_image' image=(displayImage this.mediaWrapper 'subImage img-responsive' alt=this.subProduct.name dataId=this.subProduct.sku)}}  
            {{/if}}             
             {{#if isRenew}}
                <p>Renewed until {{date renewEndDate}}</p>
            {{/if}}      
            <p class="cc_subscription_product_desc">
          {{unescape this.subProduct.shortDesc}}
         </p>
        </div>
            {{#ifEquals this.canEditQuantity true}}
                <div class="col-xs-4" id="freeTrialBlock" >
                    <div class="col-xs-12">
                         <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-6" >{{pageLabelMap 'MyAccount_Subsc_Type'}}&#58;&#160;</span><span class="pull-right col-xs-6" name="FreeTrialType" >{{this.type}}</span>
                    </div>
                    <div class="col-xs-12">
                        <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-6" >{{pageLabelMap 'FreeTrial_Quantity'}}&#58;&#160;</span> <input class=" col-xs-6" style="width: 22%;" id="SubscFreeTrialQuantity" name="FreeTrialQuantity" value="{{this.quantity}}"  />
                    </div>
                    <div  class="col-xs-12" >
                        <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-6">{{pageLabelMap 'MyAccount_Subsc_StartDate'}}&#58;&#160;</span> <span  class="pull-right col-xs-6" name="FreeTrialStartDate"  >{{date this.startDate}}</span>
                    </div>
                    <div class="col-xs-12" >
                        <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-6" >{{pageLabelMap 'MyAccount_Subsc_EndDate'}}&#58;&#160;</span> 
                        <div class="form-group form-group-sm datecol-xs-6" style="padding-left:20px">
                         
                          <div class="input-group" id="datetimepickerFrom">
                           <span class="Zebra_DatePicker_Icon_Wrapper" style="display: inline-block; position: relative; float: none; top: auto; right: auto; bottom: auto; left: auto;"><input id="fromDateStr" name="fromDateStr" value="{{this.endDate2}}" style="padding-left: 9%;    width: 115px;" class="requestedDate invoiceSearch fromDate cc_from_date" readonly="readonly" style="position: relative; top: auto; right: auto; bottom: auto; left: auto;"/></span>
                          </div>
                         </div>
                        
                    </div>
                    
                    
                    <div style="text-align: right;padding-top: 2%;" class="col-xs-12">
                        <div id="processingMsgId" class="main-messagingSection-Error" style = " display: none" ></div>
                        <button id="updateSubscQuantity" type="button" class="btn btn-default btn-sm checkOutBtn cc_checkout_btn" onClick = "return updateSubscEndDate()" >{{pageLabelMap 'FreeTrial_Save'}}</button>
                    </div>
                    <div class="freeTrialSuccess" style="color: green; "></div>
                    <div class="messagingSection-FreeTrial-Error" style="display: none ;color: red; padding-top: 2%;" />
                </div>
            {{else}}
                <div class="col-xs-4" id="freeTrialBlock2" >
                    <div class="col-xs-12" >
                        <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-7" >{{pageLabelMap 'MyAccount_Subsc_Type'}}&#58;&#160;</span><span  class="pull-right col-xs-5"  name="FreeTrialType"  >{{this.type}}</span>
                    </div>
                    <div class="col-xs-12" >
                         <span style="font-weight: bold; text-align: right;"class="pull-left col-xs-7" >{{pageLabelMap 'FreeTrial_Quantity'}}&#58;&#160;</span><span  class="pull-right col-xs-5"  id="SubscFreeTrialQuantity2" name="FreeTrialQuantity"  >{{this.quantity}}</span>
                    </div>
                    <div class="col-xs-12"  >
                        <span style="font-weight: bold;text-align: right;"class="pull-left col-xs-7" >{{pageLabelMap 'MyAccount_Subsc_StartDate'}}&#58;&#160;</span> <span  class="pull-right col-xs-5" name="FreeTrialStartDate" >{{date this.startDate}}</span>
                    </div>
                    <div class="col-xs-12" >
                        <span style="font-weight: bold;text-align: right;" class="pull-left col-xs-7" >{{pageLabelMap 'MyAccount_Subsc_EndDate'}}&#58;&#160;</span><span class="pull-right col-xs-5" name="SubscFreeTrialEndDate" >{{date this.endDate}}</span>
                    </div>
                </div>
                
            {{/ifEquals}}
       </div>
       <div class="row cc_product_info_row">
         <div class="col-xs-16" style="padding-left: 2%;">
         {{#if this.includedItems}}
          <a class="subscriptionField included_items cc_included_items" href="#additional_info{{this.subProduct.sku}}" id="additionalInfoLink" data-toggle="modal">{{pageLabelMap 'MySubscriptions_IncludedItems'}}</a>
          <div id="additional_info{{this.subProduct.sku}}" class="modal included_items fade cc_modal cc_subscription_included_items" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
           <div class="modal-dialog cc_modal-dialog" role="document">
            <div class="modal-content cc_modal-content">
             <div class="modal-header cc_modal-header">
              <button type="button" class="close cc_close" data-dismiss="modal" arial-label="Close"><span aria-hidden="true">&#215;</span></button>
              <h4 class="modal-title cc_modal-title" id="myModalLabel">{{this.subProduct.name}} {{pageLabelMap 'MySubscriptions_IncludedItems'}}</h4>
             </div>
             <div class="modal-body cc_modal-body">
              {{#each this.includedItems}}
               <div class="row">
                <div class="col-md-8 cc_sub_included_item-name">
                 {{{displayProductName 'Aggregate_Display' this.translatedParentProductName this.translatedProductName }}}
                </div>
               </div>
              {{/each}}
             </div>
            </div>
           </div>
          </div>
         {{/if}}
         {{#if this.quantity}}
         {{/if}}
        </div>
       </div>
       <hr>
        
       {{#if this.sptInstCount}}
        {{#ifNotEquals this.subStatus 'Cancelled'}}
         <div class="row cc_subscription_order_row">
          <div class="col-xs-12">
           {{#ifGreater this.instCountRemaining 0}}
            <span style="font-weight: bold;" class="cc_next_order_label">{{pageLabelMap 'MySubscriptions_NextInstallDate'}} </span><span class="cc_next_order_label">{{ date this.instNextDate}}</span>
             <p class="cc_future_installment_detail" style="padding-top: 1%;">
              {{pageLabelMap 'MySubscriptions_PaymentDetailModifiers' this.instCountRemaining (price this.recurringPrice ../currencyIsoCode) this.sptInstFreq (pageLabelPrefixMap 'MySubscriptions_Frequency_' this.sptInstFreqUOM) (date this.instLastDate)}}
             </p>
           {{else}}
            <!-- Changes - Demo Issues - Feb 15 - hide this for both SES and DA Subscriptions -->
            <span class="nextOrderLabel" style="display:none">{{pageLabelMap 'MySubscriptions_NoNextShipmentLabel'}}</span>
           {{/ifGreater}}
          </div>
         </div>
        {{/ifNotEquals}}
       {{/if}}

       <div class="row cc_subscription_action_container">
        <div class="col-xs-12">
         <div class="invoiceContainer cc_invoice_action_container">
         </div>
        </div>
       </div>
       <div id="modalSecDetail"></div>
      {{/if}}
     </div>
    </div>
   </script>
   
   <script type="text/javascript">
   
    Handlebars.registerHelper('date', function(milsec) {
    if(milsec  != "" && milsec != undefined)
    {
        console.log(milsec);
        var datefinal = "";
        if(isNaN(milsec))
        {
        if(milsec.includes("-"))
        {
            var newDate = milsec;
            console.log('in if method');
            console.log(newDate);
            DateDay = newDate.split("-")[2];
            DateMonthIndex = newDate.split("-")[1];
            DateYear = newDate.split("-")[0];
            DateMonthIndex = parseInt(DateMonthIndex) - 1 ;
            DateDay = parseInt(DateDay);
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            month = months[DateMonthIndex];
            datefinal = DateDay+" "+month+" "+DateYear;
        }
        else
        {
            try{
            var params = Array.prototype.slice.call(arguments, 1);
            if(/^[a-zA-Z0-9- ]*$/.test(milsec) == false){
                console.log('string--if-->> '+milsec);
                console.log('User Locale '+CCRZ.currentUser.LocaleSidKey);
                var params = Array.prototype.slice.call(arguments, 1);
                var thisDate ;
                if(CCRZ.currentUser.LocaleSidKey==='en_AU'){
                    var splittedValue = milsec.split('/');
                    thisDate = new Date(splittedValue[2],splittedValue[1]-1,splittedValue[0]);
                }else{
                    thisDate = new Date(milsec);
                }
                console.log('thisDate '+thisDate);
                var dateToStr = thisDate.toString().split(' ');
                console.log('UTC Converted date'+dateToStr);
                var datefinal = dateToStr[2] + ' ' + dateToStr[1]+' '+dateToStr[3];
                console.log('Datefinal '+datefinal);
              }else{
                 console.log('string--else-->> '+milsec);
                console.log('User Locale '+CCRZ.currentUser.LocaleSidKey);
                var params = Array.prototype.slice.call(arguments, 1);
                var thisDate ;
                if(CCRZ.currentUser.LocaleSidKey==='en_AU'){
                    var splittedValue = milsec.split('/');
                    thisDate = new Date(splittedValue[2],splittedValue[1]-1,splittedValue[0]);
                }else{
                    thisDate = new Date(milsec);
                }
                console.log('thisDate '+thisDate);
                var dateToStr = thisDate.toUTCString().split(' ');
                //var dateToStr = thisDate.toString().split(' ');
                console.log('UTC Converted date'+dateToStr);
                var datefinal = dateToStr[1] + ' ' + dateToStr[2]+' '+dateToStr[3];
                //var datefinal = dateToStr[2] + ' ' + dateToStr[1]+' '+dateToStr[3];
                console.log('Datefinal '+datefinal);
              }
            }
            catch(e)
            {
                console.log(e);
            }
        }
        }
        else
        {
            try{
            var params = Array.prototype.slice.call(arguments, 1);
            if(/^[a-zA-Z0-9- ]*$/.test(milsec) == false){
                console.log('string--if-->> '+milsec);
                console.log('User Locale '+CCRZ.currentUser.LocaleSidKey);
                var params = Array.prototype.slice.call(arguments, 1);
                var thisDate ;
                if(CCRZ.currentUser.LocaleSidKey==='en_AU'){
                    var splittedValue = milsec.split('/');
                    thisDate = new Date(splittedValue[2],splittedValue[1]-1,splittedValue[0]);
                }else{
                    thisDate = new Date(milsec);
                }
                console.log('thisDate '+thisDate);
                var dateToStr = thisDate.toString().split(' ');
                console.log('UTC Converted date'+dateToStr);
                var datefinal = dateToStr[2] + ' ' + dateToStr[1]+' '+dateToStr[3];
                console.log('Datefinal '+datefinal);
              }else{
                 console.log('string--else-->> '+milsec);
                console.log('User Locale '+CCRZ.currentUser.LocaleSidKey);
                var params = Array.prototype.slice.call(arguments, 1);
                var thisDate ;
                if(CCRZ.currentUser.LocaleSidKey==='en_AU'){
                    var splittedValue = milsec.split('/');
                    thisDate = new Date(splittedValue[2],splittedValue[1]-1,splittedValue[0]);
                }else{
                    thisDate = new Date(milsec);
                }
                console.log('thisDate '+thisDate);
                var dateToStr = thisDate.toUTCString().split(' ');
                //var dateToStr = thisDate.toString().split(' ');
                console.log('UTC Converted date'+dateToStr);
                var datefinal = dateToStr[1] + ' ' + dateToStr[2]+' '+dateToStr[3];
                //var datefinal = dateToStr[2] + ' ' + dateToStr[1]+' '+dateToStr[3];
                console.log('Datefinal '+datefinal);
              }
            }
            catch(e)
            {
                console.log(e);
            }
        }

        console.log(datefinal);
        
        return datefinal;
        }
        else
            return "";


});  
  
    var isViewLoadFirstTime = true;
    function updateSubscEndDate()
    {
        
        $(".freeTrialSuccess").css("display", "none");
        $(".messagingSection-FreeTrial-Error").css("display", "none");
        
        var subscDate = $('input[name="fromDateStr"]').val();
        var subscQuantity = $('input[name="FreeTrialQuantity"]').val().trim();
        console.log(subscDate);
        console.log(subscQuantity);
        if(subscDate == "")
        {
            $(".messagingSection-FreeTrial-Error").css("display", "block");
            $(".messagingSection-FreeTrial-Error").html("{!($Label.OSM_SW_Free_Trial_DateValidation)}");
        }
        else if(subscQuantity == "")
        {
            $(".messagingSection-FreeTrial-Error").css("display", "block");
            $(".messagingSection-FreeTrial-Error").html("{!($Label.OSM_SW_Free_Trial_QuantityValidation)}");
        }
        else if(isNaN(subscQuantity))
        {
            $(".messagingSection-FreeTrial-Error").css("display", "block");
            $(".messagingSection-FreeTrial-Error").html("{!($Label.OSM_SW_Free_Trial_ValidQuantityValidation)}");
        }
        else if(subscQuantity == 0)
        {
            $(".messagingSection-FreeTrial-Error").css("display", "block");
            $(".messagingSection-FreeTrial-Error").html("{!($Label.OSM_SW_Free_Trial_QuantityValidationZero)}");
        }
        else
        {
        
            CCRZ.subsc.SubscriptionDataAction1.saveSubscData(function(response)
            {
                console.log(response);
                if (response.success){
                    console.log(response.data.data);
                    $(".freeTrialSuccess").text(response.data.data);
                    $(".freeTrialSuccess").css("display", "block");
                }
                else
                {
                    console.log(response.data.data);
                    $(".messagingSection-FreeTrial-Error").text(response.data.data);
                    $(".messagingSection-FreeTrial-Error").css("display", "block");
                }
            });

        }

        return true;
    }
    
    jQuery(function($){
    
  
    
    CCRZ.pubSub.on('view:SubscriptionDetailView:refresh',function(SubscriptionView){
    
    
     var daysArray = CCRZ.pagevars.pageLabels['DaysOfWeek'].split(",");
                     var monthsArray = CCRZ.pagevars.pageLabels['MonthsOfYear'].split(",");
                     var dateFormat = CCRZ.pagevars.pageLabels['Date_Format'];
        
        // Start : Juhi Changes - Oct 29, 2018 - Zebra Date picker no longer supported in 4.9
        $('.requestedDate').datepicker({
            format: 'mm/dd/yyyy'
        });
        // End : Juhi Changes - Oct 29, 2018 - Zebra Date picker no longer supported in 4.9
        console.log(CCRZ.pagevars.portalUserId );
                
                if(isViewLoadFirstTime)
                {
                      CCRZ.subsc.SubscriptionDataAction.getSubscData(function(response)
                    {

                        if (response.success)
                        {
                            
                            if(SubscriptionView != undefined)
                                if(SubscriptionView.model != undefined)
                                    if(SubscriptionView.model.attributes != undefined)
                                    {
                                        if(response.data.data.isFreeTrial)
                                            SubscriptionView.model.attributes.type = "Free";
                                        else
                                            SubscriptionView.model.attributes.type = "Paid";
                                        SubscriptionView.model.attributes.endDate = response.data.data.endDate;
                                        SubscriptionView.model.attributes.mockDisplayProduct = response.data.data.objMockProduct;
                                        
                                        SubscriptionView.model.attributes.startDate = response.data.data.startDate;
                                        SubscriptionView.model.attributes.displayProductName = response.data.data.productName;
                                        SubscriptionView.model.attributes.isRenew = response.data.data.isRenew;
                                        SubscriptionView.model.attributes.renewEndDate = response.data.data.renewEndDate;
                                        newDate = response.data.data.endDate;
                                        if(newDate != undefined)
                                        {
                                            console.log(newDate);
  
											/* commented for Mar-1016 and added 1 line after comment								  								 
                                            DateDay = newDate.split("/")[1];
                                            DateMonthIndex = newDate.split("/")[0];
                                            DateYear = newDate.split("/")[2];
                                            DateMonthIndex = parseInt(DateMonthIndex) - 1 ;

                                            console.log(DateDay);
                                            console.log(DateMonthIndex);
                                            console.log(DateYear);
                                            
                                            var months = [];
                                            months.push("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"); 
                                            
                                            console.log(months);
                                            month = months[DateMonthIndex];
                                            console.log(month);
                                            
                                            var datefinal = DateDay+" "+month+" "+DateYear;
                                            
                                            SubscriptionView.model.attributes.endDate2 = datefinal; */
											SubscriptionView.model.attributes.endDate2 = newDate;																															   
                                        }
                                        else
                                        {
                                            SubscriptionView.model.attributes.endDate2 = "";
                                        }

                                        
                                        console.log(response.data.data);
                                        if(response.data.data.isFreeTrial && response.data.data.isShowExtendDate  != "" && SubscriptionView.model.attributes.subStatus == "Active")
                                            SubscriptionView.model.attributes.canEditQuantity = true;
                                        else
                                            SubscriptionView.model.attributes.canEditQuantity = false;
                                        
                                    }
                                
                        }
                        isViewLoadFirstTime = false;
                        
                        SubscriptionView.render();
                    }
                    );
                }          
                    
    });
    
    CCRZ.subsc = _.extend(CCRZ.subsc||{});
        CCRZ.subsc.SubscriptionDataAction = _.extend(
        {
            className : 'OSM_SW_SubscriptionDetailView_Ctrl',
            getSubscData : function(callback)
            {
                var subscId = CCRZ.subscriptionDetailModel.attributes.sfid
                console.log('subscid: '+subscId);
                this.invokeCtx('fetchSubscriptionDetails', subscId, 
                function(response)
                {
                     callback(response);
                },
                {
                    buffer : false, // this call will be executed by itself
                    nmsp   : false  // defines that this is a call to a subscriber class
                }); 
            }
          
        },
        
        CCRZ.RemoteInvocation);
        
        CCRZ.subsc.SubscriptionDataAction1 = _.extend(
        {
            className : 'OSM_SW_SubscriptionDetailView_Ctrl',
            saveSubscData : function(callback)
            {
                document.getElementById("updateSubscQuantity").disabled = true;
                document.getElementById("processingMsgId").innerHTML = "{!$Label.OSM_SW_Tax_Calculation_Wait}";
                document.getElementById("processingMsgId").style.display = "block";
                var subscId = CCRZ.subscriptionDetailModel.attributes.sfid;
                var subscQuantity = $('input[name="FreeTrialQuantity"]').val();
                var subscnewDate = $('input[name="fromDateStr"]').val();
                
                subscnewDate = new Date(subscnewDate);
                this.invokeCtx('saveSubscriptionDetails', subscId, subscnewDate,subscQuantity.trim(),
                function(response)
                {
                     callback(response);
                     document.getElementById("processingMsgId").style.display = "none";
                     document.getElementById("updateSubscQuantity").disabled = false;
                },
                {
                    buffer : false, // this call will be executed by itself
                    nmsp   : false  // defines that this is a call to a subscriber class
                }); 
                
                
            }

        },
        
        CCRZ.RemoteInvocation);
        
    
    });
    
   </script>
  
</apex:page>