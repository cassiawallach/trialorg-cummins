<?xml version="1.0" encoding="UTF-8"?>
<CustomObjectTranslation xmlns="http://soap.sforce.com/2006/04/metadata">
    <fields>
        <help><!-- Specifies the default owner for new Log__c records. This can be a user ID, a username, a queue ID, or a queue&apos;s developer name. --></help>
        <label><!-- Log Owner --></label>
        <name>Nebula__DefaultLogOwner__c</name>
    </fields>
    <fields>
        <help><!-- Sets the value of Log__c.LogPurgeAction__c, which is used by the batch job LogBatchPurger to indicate the action that should be taken for a Log__c record when LogRetentionDate__c &lt; TODAY. --></help>
        <label><!-- Log Purge Action --></label>
        <name>Nebula__DefaultLogPurgeAction__c</name>
    </fields>
    <fields>
        <help><!-- Sets a default scenario for the transaction --></help>
        <label><!-- Log Scenario --></label>
        <name>Nebula__DefaultLogScenario__c</name>
    </fields>
    <fields>
        <help><!-- Uses Apex managed sharing to grants users read or edit access to their log records (on insert only). When no access level is specified, no Apex sharing logic is executed. This only gives record-level access - users will still need to be granted access to the Log__c object using permission sets or profiles. --></help>
        <label><!-- Log Access Level --></label>
        <name>Nebula__DefaultLogShareAccessLevel__c</name>
    </fields>
    <fields>
        <help><!-- This value is used to set the field Log__c.LogRetentionDate__c,  which is then used by LogBatchPurger to delete old logs. To keep  logs indefinitely, set this field to blank (null). --></help>
        <label><!-- Days to Retain Logs --></label>
        <name>Nebula__DefaultNumberOfDaysToRetainLogs__c</name>
    </fields>
    <fields>
        <help><!-- Defaults to CUSTOM_OBJECTS. This controls the default location where LogEntryEvent__e records are stored - when null, LogEntryEvent__e records will not be stored. --></help>
        <label><!-- Platform Event Storage Location --></label>
        <name>Nebula__DefaultPlatformEventStorageLocation__c</name>
    </fields>
    <fields>
        <help><!-- Defaults to EVENT_BUS. This controls the default save method used by Logger when calling saveLog(). In most situations, EVENT_BUS should be used. --></help>
        <label><!-- Save Method --></label>
        <name>Nebula__DefaultSaveMethod__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, an async callout is made to https://api.status.salesforce.com to get additional details about the current org, including the org&apos;s release version and release number. This information is then stored on the Log__c record. --></help>
        <label><!-- DEPRECATED: Enable Status API Callout --></label>
        <name>Nebula__EnableStatusApiCallout__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, log entries may be generated that contain additional details about the logging system. --></help>
        <label><!-- DEPRECATED: Enable System Messages --></label>
        <name>Nebula__EnableSystemMessages__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, any logs generated will not have any user-specific details set - any fields related to the User, Profile, etc. will be null. Note: this feature only works properly when using the save method EVENT_BUS. --></help>
        <label><!-- Enable Anonymous Mode --></label>
        <name>Nebula__IsAnonymousModeEnabled__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, Logger will automatically call Apex&apos;s System.debug(). To help with performance, this option should be disabled in production unless you are actively troubleshooting an issue. --></help>
        <label><!-- Enable Apex System.debug() --></label>
        <name>Nebula__IsApexSystemDebugLoggingEnabled__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, any data-mask rules (configured in LogEntryDataMaskRule__mdt) will be automatically applied to log entry messages. --></help>
        <label><!-- Enable Data Masking --></label>
        <name>Nebula__IsDataMaskingEnabled__c</name>
    </fields>
    <fields>
        <help><!-- Controls if Logger is enabled for the specified level (organization, profile, or user) --></help>
        <label><!-- Enabled --></label>
        <name>Nebula__IsEnabled__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, Logger will automatically call the browser&apos;s console.log() function when logging via lightning components. To help with performance, this option should be disabled in production unless you are actively troubleshooting an issue. --></help>
        <label><!-- Enable JavaScript console.log() --></label>
        <name>Nebula__IsJavaScriptConsoleLoggingEnabled__c</name>
    </fields>
    <fields>
        <help><!-- Controls if LogEntryEvent__e platform events are transformed &amp; stored in the custom objects Log__c and LogEntry__c (when IsSavingEnabled__c == true). --></help>
        <label><!-- DEPRECATED: Store Platform Events --></label>
        <name>Nebula__IsPlatformEventStorageEnabled__c</name>
    </fields>
    <fields>
        <help><!-- When enabled, any time an SObject record is logged, only fields that the current user can access will be included in the record&apos;s JSON. --></help>
        <label><!-- Strip Inaccessible Record Fields --></label>
        <name>Nebula__IsRecordFieldStrippingEnabled__c</name>
    </fields>
    <fields>
        <help><!-- Controls if saving is enabled - when disabled, any calls to saveLog() are ignored. --></help>
        <label><!-- Enable Saving --></label>
        <name>Nebula__IsSavingEnabled__c</name>
    </fields>
    <fields>
        <label><!-- Logging Level --></label>
        <name>Nebula__LoggingLevel__c</name>
    </fields>
</CustomObjectTranslation>
