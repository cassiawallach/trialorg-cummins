<apex:component controller="CG_CL_MyClaims_Table">

    <!-- Global CSS & Faviconv -->
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/bootstrap3/css/CMI-bootstrap.css')}"/>   
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/CMI-global.css')}"/> 
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/CMI-hometable.css')}"/>             
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/CMI-myjobs.css')}"/>                           
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/bootstrap-datepicker.css')}"/>                           
    <link rel="stylesheet" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/CMI-Mini-Chevrons.css')}"/> 
    <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/css/component_specific/jquery-ui.min.css')}"/>
    <link rel="stylesheet" href="{!URLFOR($Resource.font_awesome, 'font-awesome/css/font-awesome.css')}"/>
    <link rel="stylesheet" value="https://code.angularjs.org/1.2.16/angular-resource.js"/>
    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/jquery-1.11.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/bootstrap-datepicker.js')}"/>  
    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/bootstrap3/js/bootstrap.js')}"/>  

    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/responsive-tabs.js')}" /> 
    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/app.js')}" /> 

    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/Css_header2_scripts.js')}"/>       
    <apex:includeScript value="{!URLFOR($Resource.CSS_Standard_UI, '/Cummins_New1_UI/Cummins_New1_UI/assets/js/jquery-ui.min.js')}"/>

    <apex:includeScript value="{!URLFOR($Resource.css_angularjs, '/angular.js')}" /> 
    <apex:includeScript value="{!URLFOR($Resource.css_angularjs, '/angular.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.css_angularjs, '/CSS_AngularPagination.js')}" /> 
    <head><meta http-equiv="X-UA-Compatible" content="IE=11" /></head>


    <script type="text/javascript">
        function dateFormat(inputDate , dtlocale){                                  
            if(dtlocale == 'dd/MM/yyyy'){                    
                return inputDate.split("/").reverse().join("-");
            }
            else
            {                    
                var dateParts = inputDate.split(/(\d{1,2})\/(\d{1,2})\/(\d{4})/);
                return dateParts[3] + "-" + dateParts[1] + "-" + dateParts[2];
            }
        }
    </script>
    <script>


        var myapp = angular.module('myapp', ['ui.bootstrap']);

        myapp.filter('jsonDate', ['$filter', function ($filter) {
            return function (input, format) {
                //return (input) ? $filter('date')(parseInt(input.substr(6)), format) : '';
                return (input) ? $filter('date')(input,format) : '';
            };
        }])    

        myapp.controller('claimsController', ['$scope','$filter','$window',function($scope,$filter,$window){
            $scope.viewby = 20;
            $scope.itemsPerPage = $scope.viewby;
            $scope.monthRange = '6';
            $scope.account = {};  
            $scope.cRecord = {};  
            $scope.items = [];
            $scope.itemsCopy=$scope.items;
            $scope.account.Name ='';
            $scope.account.Assigned_To ='';
            $scope.account.Website ='';
            $scope.account.Fax ='';
            $scope.account.Id ='';
            $scope.account.JobLocationCode = '';
            $scope.index='';
            $scope.acttab = "0";
            $scope.currentPage = 1; 
            $scope.pageSize = $scope.viewby;
            $scope.showHidePD = true;
            $scope.showHideInfoClaims = false;
            $scope.showHidePendAuthClaims = false;
            $scope.Notesbody = '';
            $scope.showError = false;
            $scope.showHideDateRange = false;
            $scope.showHideMonthRange =true;


            var statusVal1;
            var tabClickStatus;
            var isDealer = '{!isDealer}';


            $scope.selectedMonthRange = '';

            if($scope.selectedFirstRowFirstDate == undefined){
                $scope.selectedFirstRowFirstDate = null;
            }
            if($scope.selectedFirstRowSecondDate == undefined){
                $scope.selectedFirstRowSecondDate = null;
            }

            $scope.setItemsPerPage = function(num) {
                $scope.itemsPerPage = num;
                $scope.currentPage = 1; //reset to first page
                $scope.pageSize = num;
            }

            $scope.getMonthRange = function(){
                $scope.selectedMonthRange = $scope.monthRange;
                $scope.selectedFirstRowFirstDate ='';
                $scope.selectedFirstRowSecondDate='';

                /* Anvesh Commennted As part of COCO sprint story  
                var selectedLocation = '{!defaultLoc}';
                $scope.acttab = "0";
                $scope.currentPage = 1;
                $scope.loadingImage = true;
                var statusVal = 'Draft';
                var firstDateStr = $scope.selectedFirstRowFirstDate;
                var secondDateStr = $scope.selectedFirstRowSecondDate;
                var firstDate;

                if(firstDateStr != null && firstDateStr != ''){
                    firstDate = new Date(firstDateStr);
                }
                var secondDate;
                if(secondDateStr != null && secondDateStr != ''){
                    secondDate = new Date(secondDateStr);
                }


               if(selectedLocation != null) {
                    Visualforce.remoting.Manager.invokeAction(
                        'CG_CL_MyClaims_Table.ClaimsSearch', 
                        selectedLocation,statusVal,null,null,null,null,$scope.selectedMonthRange,isDealer,$scope.selectedFirstRowFirstDate,$scope.selectedFirstRowSecondDate,function(result, event) {  
                            if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                $scope.datesearcherrmsg1 = false;
                                $scope.datesearcherrmsg2 = false;
                            }
                            else{
                                if($scope.selectedFirstRowFirstDate != null && $scope.selectedFirstRowFirstDate != '' && $scope.selectedFirstRowSecondDate != null && $scope.selectedFirstRowSecondDate != ''){
                                    if(firstDate > secondDate){
                                        alert('To Date Value should always be greater than From Date Value');
                                        result = '';
                                    }
                                    $scope.datesearcherrmsg1 = false;
                                    $scope.datesearcherrmsg2 = false;
                                }
                                else{
                                    if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && $scope.selectedFirstRowSecondDate != null){
                                        $scope.datesearcherrmsg1 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg1 = false;
                                    }
                                    if($scope.selectedFirstRowFirstDate != null && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                        $scope.datesearcherrmsg2 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg2 = false;
                                    }
                                }
                            }

                            if($scope.datesearcherrmsg1 == true || $scope.datesearcherrmsg2 == true){
                                result = '';
                            }

                            console.log('result' + ' ' + result);
                            if(result != ''){
                                $scope.indx=result.lastIndexOf("rccnt-");
                                $scope.strResult=result.substring(0,$scope.indx);
                                $scope.items = JSON.parse($scope.strResult.replace(/(&amp\;)/g,'&').replace(/(&quot\;)/g,'"').replace(/(&#39\;)/g,'\''));
                                $scope.recCount=result.substring(result.lastIndexOf("rccnt-")+6,result.length);
                            }
                            else{
                                $scope.items = null;
                                $scope.recCount= 0;
                            }
                            $scope.$apply();
                        });
                } */

            }


            $scope.IconShowHide = function() {
                console.log('IconShowHide');

                Visualforce.remoting.Manager.invokeAction(
                    'CG_CL_MyClaims_Table.CopyIconShowHide',function(result,event){
                        console.log('Rerouting to claims>>>>>'+result);

                        if(result!=undefined || result!=null){ 
                            if(result) {
                                $scope.IconBright = false;
                                $scope.IconLight = true;


                            } else {
                                $scope.IconBright = true;
                                $scope.IconLight = false;

                            }
                        }
                    });
            }
            $scope.IconSH = $scope.IconShowHide();


            $scope.copyclaim = function(claimid,warrantyid,servicejobid,multipsnflag){
                //$scope.ClaimRecid= claimid;
                console.log('claimid>>' + claimid);
                console.log('warrantyid>>' +warrantyid);
                console.log('servicejobid>>' +servicejobid);
                console.log('multipsnflag>>>' +multipsnflag);  
                // if(multipsnflag)
                //$scope.Displaytext=true;
                // console.log($scope.Displaytext);
                $scope.IconBright = false;
                $scope.IconLight = true;

                /* if(multipsnflag==true){
                    alert(' if multipsnflag')
                    $scope.IconLight = false;
                }*/
                /*if(multipsnflag==false){
                    alert('else multipsnflag')
                   $scope.IconLight = true;
                }*/


                //$scope.IconBright = false;
                //$scope.IconLight = true;
                if(multipsnflag){// && ( CONTAINS($UserRole.Name,'Factory') || dealeruser==true )){
                    //alert('multiflag'+multipsnflag);
                    console.log('inside mPSN');
                    $scope.Displaytext=true;
                    //  $scope.IconLight =false;
                    //  $scope.IconBright = false;
                    console.log('inside copy click' + $scope.IconLight);
                    console.log('inside mPSN  ' + $scope.Displaytext);
                    if((claimid==null || warrantyid!=null) ||(claimid!=null && warrantyid!=null))
                    {
                        console.log('MPSN True Siebel Claim is calling now');
                        Visualforce.remoting.Manager.invokeAction(
                            'CG_CL_MyClaims_Table.copysiebelclaims',warrantyid,claimid,function(result,event){
                                console.log('Rerouting to claims>>>>>'+result);


                                $scope.$apply(function () {
                                    $scope.Displaytext=false;
                                    $scope.IconBright = true;
                                    $scope.IconLight = false;

                                });



                                //if(result!=undefined || result!=null) {
                                //$window.open('/apex/CG_ClaimsIntake?id='+result,'_self', 'width=1600,height=800,scrollbars=yes');
                                //}

                            });
                    }
                    else if(claimid!=null){
                        console.log('MPSN True Guidanz claim is calling now');                        
                        Visualforce.remoting.Manager.invokeAction(
                            'CG_CL_MyClaims_Table.copyclaimsGuidz',claimid,warrantyid,servicejobid,function(result,event){
                                console.log('constructor method is calling:result is>>>'+result);



                                $scope.$apply(function () {
                                    $scope.Displaytext=false;
                                    $scope.IconBright = true;
                                    $scope.IconLight = false;

                                });


                                //if(result!=undefined || result!=null) {
                                //$window.open('/apex/CG_ClaimsIntake?id='+result,'_self', 'width=1600,height=800,scrollbars=yes');
                                //}
                            });

                    }
                }
                else{


                    if((claimid==null || warrantyid!=null) ||(claimid!=null && warrantyid!=null))

                    {
                        //$scope.IconLight = true;
                        console.log('MPSN flase Siebel Claim is calling now');
                        Visualforce.remoting.Manager.invokeAction(
                            'CG_CL_MyClaims_Table.copysiebelclaims',warrantyid,claimid,function(result,event){
                                console.log('Rerouting to claims>>>>>'+result);

                                if(result!=undefined || result!=null) {
                                    $window.open('/apex/CG_ClaimsIntake?id='+result,'_self', 'width=1600,height=800,scrollbars=yes');
                                }

                            });
                    }
                    else if(claimid!=null){
                        //$scope.IconLight = true;
                        console.log('MPSN false Guidanz claim is calling now');
                        // $scope.IconLight =false;
                        console.log(' MPSN tinside copy click' + $scope.IconLight);
                        Visualforce.remoting.Manager.invokeAction(
                            'CG_CL_MyClaims_Table.copyclaimsGuidz',claimid,warrantyid,servicejobid,function(result,event){
                                console.log('constructor method is calling:result is>>>'+result);


                                if(result!=undefined || result!=null) {
                                    $window.open('/apex/CG_ClaimsIntake?id='+result,'_self', 'width=1600,height=800,scrollbars=yes');
                                }
                            });

                    }
                }



                /*  setTimeout(function () {
               $scope.$apply(function () {
                 $scope.Displaytext=false;
                 $scope.IconBright = true;
                $scope.IconLight = false;

                       });
                     }, 1000);*/



            }
            $scope.rejectButton = function(claimRecId){
                //alert('claimRecId' + '   ' + claimRecId);
                $scope.ClaimRecid= claimRecId;
                $('#RejectPopup').modal('show');
            }
            //Rupesh:ClaimDeleteid function which is getting called on click of delete icon (angular)
            $scope.ClaimDeleteid = function(claimRecId)
            {
                //alert('claimRecId' + '   ' + claimRecId);
                $scope.ClaimRecid= claimRecId;//Storing the ClaimRecId variable 
                $('#DelteClaimPopUp').modal('show');//Also calling the Model Popup with the DelteClaimPopUp id
                //alert('claimRecId' + '   ' + claimRecId);
            }

            // $scope.NoteBody= Notesbody;
            $scope.onChangeRej = function(Notesbody){

                //alert('$scope.ClaimRecid' + $scope.ClaimRecid);
                //alert('Notesbody***' + Notesbody);
                $scope.Notesbody = Notesbody;
                if(Notesbody==''){
                    $scope.showError=true;
                    $('#RejectPopup').modal('show');
                }
                else{
                    $scope.showError=false;

                    //alert('$scope.Notesbody' + $scope.NoteBody);
                    var CRecID = $scope.ClaimRecid;
                    var CRejComm = $scope.NoteBody;
                    Visualforce.remoting.Manager.invokeAction(
                        'CG_CL_MyClaims_Table.saveRejectCom',CRecID,Notesbody,
                        function(result,event){
                            //alert('hello2'); 
                        });
                    $('#RejectPopup').modal('hide');
                    $scope.Notesbody = '';
                    $scope.reload();
                }
            }

            $scope.onChangeRejCancel = function(){
                $scope.Notesbody = '';
                $scope.showError=false;
                $('#RejectPopup').modal('hide');

            }
            //Rupesh
            $scope.DeleteClaimid = function(){
                // $scope.Notesbody = '';
                //$scope.showError=false;
                $('#claimInfoModal1').modal('hide');

            }

            $scope.reload = function () {
                setTimeout("location.reload(true);",1000);
            }

            $scope.paged = function (valLists, pageSize) {
                retVal = [];
                if(valLists != null){
                    for (var i = 0; i < valLists.length; i++) {
                        if (i % pageSize === 0) {

                            retVal[Math.ceil((i+1) / pageSize)] = [valLists[i]];
                        } else {

                            retVal[Math.ceil((i+1) / pageSize)].push(valLists[i]);
                        }

                    }
                }
                return retVal;
            }

            $scope.NewViewPaymentDetails = function(CSID,Status){
                $window.open('/apex/CG_ClaimsViewPaymentDetails?id='+CSID+'&Status='+Status,'C-Sharpcorner', 'width=1600,height=800,scrollbars=yes,resizable=1');
            }

            $scope.claimsPagePDF = function(ID,Status){
                $window.open('/apex/CG_ClaimsViewPaymentDetails?id='+ID+'&Status='+Status,'C-Sharpcorner', 'width=1600,height=800,scrollbars=yes,resizable=1');
            }

            $scope.NewPartReturnERP = function(ClaimSubID){
                $window.open('/apex/CG_PartsReturnEPRPDF?id='+ClaimSubID);
            }


            $scope.$watch(function () {
                $scope.filteredList = $scope.$eval("items | filter:search");
                $scope.ItemsByPage = $scope.paged($scope.filteredList, $scope.pageSize);
            });

            $scope.range = function (input, total) {
                var ret = [];
                if (!total) {
                    total = input;
                    input = 0;
                }
                for (var i = input; i < total; i++) {
                    if (i != 0 && i != total - 1) {
                        ret.push(i);
                    }
                }
                return ret;
            }   

            $scope.menu = [

                /* {
                tab: "One",
                nom: "{!$Label.CSS_View_all}"
            }, */
                {
                    tab: "Two",
                    nom: "{!$Label.CSS_Draft}"

                },
                {
                    tab: "Three",
                    nom: "{!$Label.CSS_Submitted}"
                },
                {
                    tab: "Four",
                    nom: "{!$Label.CG_In_Review}",
                    // count:"(10)"
                },

                //for story GSSC-151
                {
                    tab: "Six",
                    nom: "{!$Label.CG_PendingResponse}",
                    //  count:"(" + $scope.CountPR + ")"
                },


                {
                    tab: "Five",
                    nom: "{!$Label.CG_Denied}"
                },
                //for story 118969
                /*{
                    tab: "Six",
                    nom: "{!$Label.CG_Appealed_Resubmitted}"
                },*/
                {
                    tab: "Seven",
                    nom: "{!$Label.CG_Paid_as_Submitted}"
                },
                //  Below Code commented for story #161636
                /*   {
                tab: "Eight",
                nom: "{!$Label.CG_Partially_Paid}"
            }, */
                {
                    tab: "Nine",
                    nom: "{!$Label.CG_Parts_to_Return}"
                },
                {
                    tab: "Ten",
                    nom: "{!$Label.CG_Pending_Authorization}"
                },
                {
                    tab: "Eleven",
                    nom: "{!$Label.CG_Information_Only}"
                },
                {
                    tab: "Twelve",
                    nom: "{!$Label.CSS_View_all}"
                }          
            ]

            $scope.selectItem = function(item) {
                if (item.tab=='Two') {
                    var statusVal = 'Draft';
                    $scope.acttab = "0";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Draft';
                }

                if (item.tab=='Three') {
                    var statusVal = 'Submitted';
                    $scope.acttab = "1";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Submitted';
                }

                if (item.tab=='Four') {
                    var statusVal = 'In Review';
                    $scope.acttab = "2";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'In Review';
                }

                //for story GSSC-151
                if (item.tab=='Six') {
                    var statusVal = 'Pending Response';
                    $scope.acttab = "3";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Pending Response';
                }

                if (item.tab=='Five') {
                    var statusVal = 'Denied';
                    $scope.acttab = "4";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Denied';
                }
                //for story 118969
                /*if (item.tab=='Six') {
                    var statusVal = 'Appealed/Resubmitted';
                    $scope.acttab = "4";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Appealed/Resubmitted';
                }*/
                if (item.tab=='Seven') {
                    var statusVal = 'Paid'; //Paid as submitted is changed to paid for #161635
                    $scope.acttab = "5";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Paid';
                }
                //Below code commented for story #161636
                /* if (item.tab=='Eight') {
                var statusVal = 'Partially Paid';
                $scope.acttab = "6";
                $scope.showHidePendAuthClaims = false;
            }*/
                if (item.tab=='Nine') {
                    var statusVal = 'Parts to Return';
                    $scope.acttab = "6";  
                    //  console($scope.acttab);//changed acttab value for story #161636
                    /*   $scope.showHidePD = true;
        $scope.showHideInfoClaims = false; */
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Parts to Return';
                }
                if (item.tab=='Ten') {
                    var statusVal = 'Pending Authorization';
                    //var statusVal = 'Pending Authorization';
                    //var statusVal = 'Draft';
                    $scope.acttab = "7";
                    $scope.showHidePendAuthClaims = true;
                    tabClickStatus = 'Pending Authorization';
                }
                if (item.tab=='Eleven') {
                    var statusVal = 'Information Only'
                    statusVal1 = 'Not Authorized'
                    $scope.acttab = "8";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'Information Only';
                }
                /*  if (item.tab=='Twelve') {
                var statusVal = 'View All';
                $scope.acttab = "9";
                $scope.showHidePendAuthClaims = false;
            }*/

                var selectedLocation = $scope.locName;
                var searchField = $scope.option2;
                var searchValue = $scope.secondRowInputText;
                var searchValuedropdown = $scope.status2;



                if (item.tab=='Twelve') {
                    console.log('inside tab view all' + $scope.locName);
                    if(searchField =='Status' && searchValuedropdown !=null) {
                        var statusVal = searchValuedropdown;
                        console.log('inside tab view all statusVal' + statusVal);
                    }
                    else
                        var statusVal = 'View All';

                    $scope.acttab = "9";
                    $scope.showHidePendAuthClaims = false;
                    tabClickStatus = 'View All';
                }

                console.log('SelectItem tabClickStatus>--- ' + tabClickStatus);
                console.log('$scope.status2-->' + $scope.status2);
                console.log('$scope.option2-->' + $scope.option2);
                console.log('$scope.secondRowInputText-->' + $scope.secondRowInputText);
                console.log('statusVal 429' + ' ' + statusVal);

                $scope.selectedMonthRange = $scope.monthRange;
                console.log('$scope.selectedMonthRange tabselect' + '  ' + $scope.selectedMonthRange);
                // var selectedLocation = '{!defaultLoc}';

                if(searchValue == undefined){
                    //   searchValue = null;
                    searchValue = '';
                }
                if(searchValuedropdown == undefined) {
                    searchValuedropdown = null;
                }
                if(statusVal1== undefined)
                {
                    statusVal1 = null;
                }
                $scope.currentPage = 1;
                var firstDateStr = $scope.selectedFirstRowFirstDate;
                var secondDateStr = $scope.selectedFirstRowSecondDate;
                var firstDate;
                if(firstDateStr != null && firstDateStr != ''){
                    firstDate = new Date(firstDateStr);
                    $scope.selectedMonthRange = 0;
                }
                var secondDate;
                if(secondDateStr != null && secondDateStr != ''){
                    secondDate = new Date(secondDateStr);
                    $scope.selectedMonthRange = 0;
                }

                console.log('statusVal>>>' + statusVal);
                console.log('searchField>>>' + searchField);
                console.log('searchValuedropdown>>>' + searchValuedropdown);

                if((searchField !='Status' && (searchValuedropdown==null || searchValuedropdown==''))|| (searchValuedropdown == statusVal) || (statusVal =='View All')) {
                    console.log('searchValuedropdown inside if>>>' + searchValuedropdown);
                    Visualforce.remoting.Manager.invokeAction(
                        'CG_CL_MyClaims_Table.ClaimsSearch', 
                        selectedLocation,statusVal,statusVal1,searchField,searchValue,searchValuedropdown, $scope.selectedMonthRange,isDealer,$scope.selectedFirstRowFirstDate,$scope.selectedFirstRowSecondDate, tabClickStatus, function(result, event) {  
                            if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                $scope.datesearcherrmsg1 = false;
                                $scope.datesearcherrmsg2 = false;
                            }
                            else{
                                if($scope.selectedFirstRowFirstDate != null && $scope.selectedFirstRowFirstDate != '' && $scope.selectedFirstRowSecondDate != null && $scope.selectedFirstRowSecondDate != ''){
                                    if(firstDate > secondDate){
                                        alert('To Date Value should always be greater than From Date Value');
                                        result = '';
                                    }
                                    $scope.datesearcherrmsg1 = false;
                                    $scope.datesearcherrmsg2 = false;
                                }
                                else{
                                    if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && $scope.selectedFirstRowSecondDate != null){
                                        $scope.datesearcherrmsg1 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg1 = false;
                                    }
                                    if($scope.selectedFirstRowFirstDate != null && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                        $scope.datesearcherrmsg2 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg2 = false;
                                    }
                                }
                            }

                            if($scope.datesearcherrmsg1 == true || $scope.datesearcherrmsg2 == true){
                                result = '';
                            }

                            $scope.s1 = '(';
                            $scope.s2 = ')';
                            var count = 0;
                            
                             console.log('result' + result + ' result.size ' + result.length);
                            if(result != ''){
                                $scope.indx=result.lastIndexOf("rccnt-");
                                $scope.strResult=result.substring(0,$scope.indx);
                                $scope.items = JSON.parse($scope.strResult.replace(/(&amp\;)/g,'&').replace(/(&quot\;)/g,'"').replace(/(&#39\;)/g,'\''));

                                $scope.recCount=result.substring(result.lastIndexOf("rccnt-")+6,result.length);
                                console.log('$scope.indx>>' + $scope.indx);
                                 console.log('$scope.recCount>>' + $scope.recCount);
                                console.log('$scope.items.length>>' + $scope.items.length);
                                
                                /* Begin story GSSC-151 */
                                  if(statusVal == 'Pending Response'){ 
                                      console.log('Inside statusVal>>' +statusVal);
                                        for(i=0;i<$scope.items.length;i++){
                                            if($scope.items[i].PendingResponseSP == true){
                                                count=count +1; 
                                            }
                                        }
                                        console.log('count>>' +count);
                                         
                                        $scope.count =  $scope.s1 + count +  $scope.s2;
                                        console.log('$scope.menu.count ' +$scope.count);
                                 }
                                 else{
                                     console.log('inside else not equlas');
                                 }
                                /* End story GSSC-151 */
                            }
                            else{
                                $scope.items = null;
                                $scope.recCount= 0;
                                $scope.count =  $scope.s1 + count +  $scope.s2;
                            }


                            $scope.$apply();
                        });
                }
                else{
                    result = '';
                    $scope.items = null;
                    $scope.recCount= 0;
                }
                $scope.loadingImage = false;
            }

            $scope.fieldValues = {
                // "selectOne" : "{!$Label.CSS_WS_Selection_One}",   
                "All" : "All",
                "ConsolidatedClaimID" : "Consolidated Claim ID",
                "paymentRefNumber" : "Payment Reference Number",
                "Status" : "{!$Label.CSS_Status}",
                "CustomerName" : "Customer Name",
                "ShopWorkOrder" : "{!$Label.css_shop_work_order}",
                "ProductSerialNumber" : "Product Serial Number", 
                "VINAssetSerialNumber" :"VIN / Asset Serial Number", //added 05/02
                "GuidanzJobnumber": "Guidanz Job number"
            }

            $scope.statusValues = {
                "selectOne" : "-- Select One --",
                //"Appealed/Resubmitted" : "Appealed/Resubmitted",// for story 118969
                "Denied" : "Denied",
                "Draft" : "Draft",
                "Information Only" : "Information Only",
                "In Review" : "In Review",
                "Paid as Submitted" : "Paid", //changed as paid for #161635 
                "Parts to Return" : "Parts to Return",
                "Pending Authorization" : "Pending Authorization",
                "Submitted" : "Submitted",
                "View All" : "View All"
                //"Partially Paid" : "Partially Paid", 
                //code commented for story #161636
            }

            //Below code for search functionality
            $scope.showHideSecondRowInput = true;//needed
            $scope.showHide2StatusOptions = false;
            $scope.showHideSearchButton2 =true;  //added 05/02
            $scope.showHideSearchButton1 =false; //added 05/02

            $scope.getOptionsField = function(item) {

                if($scope.option2=== undefined){
                }
                else{                       
                    var fieldKey = $scope.option2;
                    console.log("fieldKey", fieldKey);//Getting KEY
                    if(fieldKey != 'selectOne') {
                        $scope.showHideSearchButton1 =false; //added 05/02
                        $scope.showHideSearchButton2 =true; //added 05/02
                        if(fieldKey == "All" || fieldKey == "ConsolidatedClaimID" || fieldKey == "paymentRefNumber" || fieldKey == "CustomerName" || fieldKey == "ShopWorkOrder" || fieldKey == "ProductSerialNumber" || fieldKey == "VINAssetSerialNumber" || fieldKey == "GuidanzJobnumber") {
                            console.log("inside if or cond fieldKey" + fieldKey);
                            $scope.showHideSecondRowInput = true; 
                            $scope.showHide2StatusOptions = false;
                            $scope.status2  = '';
                            $scope.secondRowInputText = '';
                            if(fieldKey == "All"){ //added 05/02
                                $scope.showHideSearchButton1 =true; //added 05/02
                                $scope.showHideSearchButton2 =false;  //added 05/02
                            } //added 05/02
                        }else if(fieldKey == "Status") {

                            $scope.showHideSecondRowInput = false; 
                            $scope.showHide2StatusOptions = true;
                            $scope.secondRowInputText = ''
                            $scope.status2  = '-- Select One --';
                        } else {

                            $scope.showHideSecondRowInput = true; 
                            $scope.showHide2StatusOptions = false;
                            $scope.status2  = '';
                        }
                    } /*else {
                    $scope.showHideSecondRowInput = true; 
                    $scope.showHide2StatusOptions = false;
                    $scope.status2  = '';
                }  */
                    else{ //added 05/02
                        $scope.showHideSecondRowInput = true;
                        $scope.secondRowInputText = '';//added 05/02
                        $scope.showHide2StatusOptions = false; //added 05/02
                        $scope.status2  = ''; //added 05/02
                        $scope.showHideSearchButton1 =false; //added 05/02
                        $scope.showHideSearchButton2 =true; //added 05/02
                    }

                }

            };
            //below method is added 05/02
            $scope.changeButton = function()
            {

                var value= $scope.secondRowInputText;
                var Picklist = $scope.option2;
                var statusVal = $scope.status2;
                var nfieldKey = $scope.option2;
                if((value != null && value != '') || ( statusVal != '' && statusVal != "-- Select One --") && nfieldKey != 'selectOne')
                {

                    //When it is equal not equal to select one then Enable
                    $scope.showHideSearchButton1 =true;
                    $scope.showHideSearchButton2 =false;

                }
                else
                {
                    //When it is equal to select one then disable
                    $scope.showHideSearchButton1 =false;
                    $scope.showHideSearchButton2 =true;
                }

                if( ( value != null && value != ''|| value==null && value == '') && nfieldKey == 'selectOne')
                {
                    //When there is text or not text in the input and select one the button should not be searchable
                    //Defect: 142600 Story 115058 (Rupesh)
                    $scope.showHideSearchButton1 =false;
                    $scope.showHideSearchButton2 =true;
                    //alert(value);
                }  

                if((value == null || value == '')  && Picklist == 'All' ){
                    $scope.showHideSearchButton1 =true;
                    $scope.showHideSearchButton2 =false;
                }

            }

            $scope.clearRow =function(item){
                $scope.showHideSecondRowInput = true;
                $scope.option2  = 'All';
            }

            $window.onload=function(){

                var selectedLocation = '{!defaultLoc}';

                //  alert('selectedLocation' + ' ' + selectedLocation);
                $scope.defaultMonthRange = '6';
                console.log('$scope.defaultMonthRange onload' + ' ' + $scope.defaultMonthRange);
                $scope.currentPage = 1;
                $scope.loadingImage = true;
                var statusVal = 'Draft';
                var tabClickStatus = 'Draft';
                var firstDateStr = $scope.selectedFirstRowFirstDate;
                var secondDateStr = $scope.selectedFirstRowSecondDate;
                var firstDate;
                if(firstDateStr != null && firstDateStr != ''){
                    firstDate = new Date(firstDateStr);
                }
                var secondDate;
                if(secondDateStr != null && secondDateStr != ''){
                    secondDate = new Date(secondDateStr);
                }
                if(selectedLocation != null) {
                    Visualforce.remoting.Manager.invokeAction(
                        'CG_CL_MyClaims_Table.ClaimsSearch', 
                        selectedLocation,statusVal,null,'All','',null,$scope.defaultMonthRange,isDealer, $scope.selectedFirstRowFirstDate,$scope.selectedFirstRowSecondDate,tabClickStatus,function(result, event) {  
                            if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                $scope.datesearcherrmsg1 = false;
                                $scope.datesearcherrmsg2 = false;
                            }
                            else{
                                if($scope.selectedFirstRowFirstDate != null && $scope.selectedFirstRowFirstDate != '' && $scope.selectedFirstRowSecondDate != null && $scope.selectedFirstRowSecondDate != ''){
                                    if(firstDate > secondDate){
                                        alert('To Date Value should always be greater than From Date Value');
                                        result = '';
                                    }
                                    $scope.datesearcherrmsg1 = false;
                                    $scope.datesearcherrmsg2 = false;
                                }
                                else{
                                    if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && $scope.selectedFirstRowSecondDate != null){
                                        $scope.datesearcherrmsg1 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg1 = false;
                                    }
                                    if($scope.selectedFirstRowFirstDate != null && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                        $scope.datesearcherrmsg2 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg2 = false;
                                    }
                                }
                            }

                            if($scope.datesearcherrmsg1 == true || $scope.datesearcherrmsg2 == true){
                                result = '';
                            }

                            console.log('result' + ' ' + result);
                              console.log('result.length' + ' ' + result.length);
                            if(result != ''){
                                $scope.indx=result.lastIndexOf("rccnt-");
                                $scope.strResult=result.substring(0,$scope.indx);
                                $scope.items = JSON.parse($scope.strResult.replace(/(&amp\;)/g,'&').replace(/(&quot\;)/g,'"').replace(/(&#39\;)/g,'\''));
                                //  console.log('scopritems payment detils' + ' ' + $scope.items.paymentDetails);
                                //  console.log('siebel  payment detils' + ' ' + $scope.items.paymentDetails);
                                //   var dlsf = result[0].claimSubmisionRecordId;
                                console.log('$scope.indx' + ' ' + $scope.indx);
                                $scope.recCount=result.substring(result.lastIndexOf("rccnt-")+6,result.length);
                                console.log('recCount>>' +$scope.recCount );
                               // $scope.PRescount = '(' + result.substring(result.length-1,result.length) + ')' ;
                               // console.log('Rescount>>' +$scope.PRescount );

                            }
                            else{
                                $scope.items = null;
                                $scope.recCount= 0;
                            }

                            $scope.$apply();
                        });
                    $scope.loadingImage = false;
                } 


            }

            var disabled1 = [];
            $scope.isDisabled1 = function(id)
            {
                if(disabled1[id] === undefined) return false;
                return disabled1[id];
            }

            var disabled = [];
            $scope.isDisabled = function(id)
            {
                if(disabled[id] === undefined) return false;
                return disabled[id];
            }
            $scope.onchangeauth = function(sid){
                disabled[sid] = true;
                disabled1[sid] = true;
                //document.getElementById("rejBtn").disabled = true;
                //alert('hello' +sid);
                if(sid!=null){
                    Visualforce.remoting.Manager.invokeAction('CG_CL_MyClaims_Table.onchangeAuthorize',sid,function(result,event){
                        //alert('hello2'); 
                    });

                }
            }

            //Method to Delete the claim..on click of Yes button this also called through Javascript
            $scope.onchangedeleteclm = function()
            {
                var CRecID = $scope.ClaimRecid;
                //alert('Deleting Claim....');
                //console.log("CLaim ID"+CRecID);
                if(CRecID!=null){
                    Visualforce.remoting.Manager.invokeAction('CG_CL_MyClaims_Table.deleteselecteddraftclaims',CRecID,function(result,event){
                        console.log('Testing completed Stage>>');
                        //$route.reload();
                        $window.location.reload();
                    });

                }


            }




            $scope.SearchClaims = function(selectedLocation, claimsStatus, searchField, searchValue, searchValuedropdown) {
                $scope.acttab="0";
                $scope.currentPage = 1;
                $scope.loadingImage = true;
                $scope.showHidePendAuthClaims = false;

                $scope.selectedMonthRange = $scope.monthRange;
                //$scope.locName = selectedLocation;
                //$scope.status2 = claimsStatus;
                console.log('$scope.locName' + $scope.locName);
                console.log('$scope.status2' + $scope.status2);
                console.log('$scope.selectedMonthRange' + '  ' + $scope.selectedMonthRange);
                console.log('searchField' + '  ' + searchField);
                console.log('searchValue' + '  ' + searchValue);
                if(searchField!=null)
                    $scope.option2 = searchField;
                if(searchField=='Information Only')
                {
                    statusVal1 = 'Not Authorized';
                }
                if(searchValue!=null)
                    $scope.secondRowInputText = searchValue;


                if(searchValue == undefined){
                    searchValue = '';
                }

                console.log(' 2nd searchValue' + '  ' + searchValue);

                if(searchField =='Status' ){
                    console.log('inside searchField>>' + searchField);
                    if(searchValuedropdown == 'Draft'){
                        $scope.acttab = "0";
                        tabClickStatus = 'Draft';
                    }
                    else if(searchValuedropdown == 'Submitted'){
                        $scope.acttab = "1";
                        tabClickStatus = 'Submitted';
                    }
                    else if(searchValuedropdown == 'In Review'){
                        $scope.acttab = "2";
                        tabClickStatus = 'In Review';
                    }

                    else if(searchValuedropdown == 'Pending Response'){
                        $scope.acttab = "3";
                        tabClickStatus = 'Pending Response';
                    }
                    else if(searchValuedropdown == 'Denied'){
                        $scope.acttab = "4";
                        tabClickStatus = 'Denied';
                    }
                    /* else if(searchValuedropdown == 'Appealed/Resubmitted'){
                        $scope.acttab = "4";
                        tabClickStatus = 'Appealed/Resubmitted';
                    }*/
                    else if(searchValuedropdown == 'Paid'){
                        $scope.acttab = "5";
                        tabClickStatus = 'Paid';
                    }
                    else if(searchValuedropdown == 'Parts to Return'){
                        $scope.acttab = "6";
                        tabClickStatus = 'Parts to Return';
                    }
                    else if(searchValuedropdown == 'Pending Authorization'){
                        $scope.acttab = "7";
                        tabClickStatus = 'Pending Authorization';
                    }
                    else if(searchValuedropdown == 'Information Only'){
                        $scope.acttab = "8";
                        tabClickStatus = 'Information Only';}
                    else if(searchValuedropdown == 'View All'){
                        $scope.acttab = "9";
                        tabClickStatus = 'View All';
                    }
                }
                console.log(' search $scope.acttab >> ' +  $scope.acttab);

                if(searchValuedropdown == undefined) {
                    searchValuedropdown = null;
                }

                if(searchValuedropdown!=null && searchValuedropdown!='' ) {
                    claimsStatus =searchValuedropdown;
                } 

                if(statusVal1== undefined)
                {
                    statusVal1 = null;
                }
                if(tabClickStatus== undefined)
                {
                    tabClickStatus = null;
                }
                var firstDateStr = $scope.selectedFirstRowFirstDate;
                var secondDateStr = $scope.selectedFirstRowSecondDate;
                var firstDate;
                if(firstDateStr != null && firstDateStr != ''){
                    firstDate = new Date(firstDateStr);
                    $scope.selectedMonthRange = 0;
                }
                var secondDate;
                if(secondDateStr != null && secondDateStr != ''){
                    secondDate = new Date(secondDateStr);
                    $scope.selectedMonthRange = 0;
                }

                console.log('calenderSel $scope.selectedMonthRange >>>' + $scope.selectedMonthRange);
                console.log('In Search tabClickStatus>>>' + tabClickStatus);
                console.log('$scope.secondRowInputText' + $scope.secondRowInputText);
                console.log('statusVal1' + statusVal1);
                console.log('searchValuedropdown not null ' + searchValuedropdown + 'claimsStatus  ' + '  ' + claimsStatus);
                console.log('selectedFirstRowFirstDate'+ $scope.selectedFirstRowFirstDate);
                if(selectedLocation != null) {
                    Visualforce.remoting.Manager.invokeAction(
                        'CG_CL_MyClaims_Table.ClaimsSearch', 
                        selectedLocation,claimsStatus,statusVal1,searchField,searchValue,searchValuedropdown, $scope.selectedMonthRange,isDealer,$scope.selectedFirstRowFirstDate,$scope.selectedFirstRowSecondDate, tabClickStatus,function(result, event) {  
                            console.log('the result is '+result);
                            console.log('selectedFirstRowFirstDate '+$scope.selectedFirstRowFirstDate);
                            console.log('selectedFirstRowSecondDate '+$scope.selectedFirstRowSecondDate);
                            if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                $scope.datesearcherrmsg1 = false;
                                $scope.datesearcherrmsg2 = false;
                            }
                            else{
                                if($scope.selectedFirstRowFirstDate != null && $scope.selectedFirstRowFirstDate != '' && $scope.selectedFirstRowSecondDate != null && $scope.selectedFirstRowSecondDate != ''){
                                    if(firstDate > secondDate){
                                        alert('To Date Value should always be greater than From Date Value');
                                        result = '';
                                    }
                                    $scope.datesearcherrmsg1 = false;
                                    $scope.datesearcherrmsg2 = false;
                                }
                                else{
                                    if(($scope.selectedFirstRowFirstDate == null || $scope.selectedFirstRowFirstDate == '') && $scope.selectedFirstRowSecondDate != null){
                                        $scope.datesearcherrmsg1 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg1 = false;
                                    }
                                    if($scope.selectedFirstRowFirstDate != null && ($scope.selectedFirstRowSecondDate == null || $scope.selectedFirstRowSecondDate == '')){
                                        $scope.datesearcherrmsg2 = true;
                                    }
                                    else{
                                        $scope.datesearcherrmsg2 = false;
                                    }
                                }
                            }

                            if($scope.datesearcherrmsg1 == true || $scope.datesearcherrmsg2 == true){
                                result = '';
                            }
                            console.log('the result is '+result);
                            if(result != ''){
                                $scope.indx=result.lastIndexOf("rccnt-");
                                console.log('$scope.indx' + ' ' + $scope.indx);
                                $scope.strResult=result.substring(0,$scope.indx);
                                console.log('$scope.strResult' + ' ' + $scope.strResult.replace(/(&amp\;)/g,'&').replace(/(&quot\;)/g,'"').replace(/(&#39\;)/g,'\''));
                                $scope.items = JSON.parse($scope.strResult.replace(/(&amp\;)/g,'&').replace(/(&quot\;)/g,'"').replace(/(&#39\;)/g,'\''));
                                console.log('$scope.items' + ' ' + $scope.items);
                                $scope.recCount=result.substring(result.lastIndexOf("rccnt-")+6,result.length);
                                console.log('$scope.recCount' + ' ' + $scope.recCount);
                                
                               // $scope.PRescount = '(' + result.substring(result.length-1,result.length) + ')' ;
                               // console.log('Rescount>>' +$scope.PRescount );
                                

                                  /* Begin story GSSC-151 */
                                var count = 0
                                for(i=0;i<$scope.items.length;i++){
                                    if($scope.items[i].PendingResponseSP == true){
                                        count=count +1; 
                                    }
                                }
                                console.log('count>>' +count);
                                
                                $scope.s1 = '(';
                                $scope.s2 = ')';
                                $scope.count =   $scope.s1 + count +  $scope.s2;
                                console.log('$scope.count ' +$scope.count);
                                
                                /* End story GSSC-151 */
                            }
                            else{
                                $scope.items = null;
                                $scope.recCount= 0;
                            }
                            $scope.$apply();
                        },
                        { buffer: true, escape: true, timeout: 30000 }

                    );
                    $scope.loadingImage = false;
                } 

                if(tabClickStatus == 'Draft')
                    $scope.acttab = "0";
                else if(tabClickStatus == 'Submitted')
                    $scope.acttab = "1";
                else if(tabClickStatus == 'In Review')
                    $scope.acttab = "2";
                else if(tabClickStatus == 'Pending Response')
                    $scope.acttab = "3";
                else if(tabClickStatus == 'Denied')
                    $scope.acttab = "4";
                /* else if(tabClickStatus == 'Appealed/Resubmitted')
                    $scope.acttab = "4";*/
                else if(tabClickStatus == 'Paid')
                    $scope.acttab = "5";
                else if(tabClickStatus == 'Parts to Return')
                    $scope.acttab = "6";
                else if(tabClickStatus == 'Pending Authorization'){
                    $scope.acttab = "7";
                    $scope.showHidePendAuthClaims = true;
                }
                else if(tabClickStatus == 'Information Only')
                    $scope.acttab = "8";
                else if(tabClickStatus == 'View All')
                    $scope.acttab = "9"; 

            }   
            $scope.reverse =false;
            //$scope.TempIconBoolean = true;
            $scope.sort = function (sortBy) {
                //$scope.reverse =true;
                //alert('Sort Logic Ivoke');

                $scope.resetAll();
                $scope.columnToOrder = sortBy;
                // made changes as part of defect 191280 - Start
                if(sortBy === 'WarrantyClaimID'){
                    $scope.items = $filter('orderBy')($scope.items,'warrClaimId',$scope.reverse,'warrClaimId');  
                } else{
                    $scope.items = $filter('orderBy')($scope.items,$scope.columnToOrder,$scope.reverse,$scope.columnToOrder);
                }

                // made changes as part of defect 191280 - End

                console.log("$scope.reverse " + '  ' +   $scope.reverse);
                if ($scope.reverse) iconName = 'fa fa-caret-down fa-lg';
                else iconName = 'fa fa-caret-up fa-lg';


                 if (sortBy === 'claimSubmitted_sort') { //Added claimSubmitted_sort a new wrapper variable, instead of claimSubmitted for sorting, GSSC-154
                    $scope.Header[0] = iconName;
                } 
                if (sortBy === 'claimID') {
                    $scope.Header[1] = iconName;
                } 
                if (sortBy === 'WarrantyClaimID'){
                    $scope.Header[2] = iconName;
                }
                if (sortBy === 'paymentRefNumber'){
                    $scope.Header[13] = iconName;
                }
                if (sortBy === 'status'){
                    $scope.Header[3] = iconName;
                }
                if (sortBy === 'paymentDetails'){
                    $scope.Header[4] = iconName;
                }
                if (sortBy === 'customerName'){
                    $scope.Header[5] = iconName;
                }
                if (sortBy === 'shopWO'){
                    $scope.Header[6] = iconName;
                }
                if (sortBy === 'prodSerialNum'){
                    $scope.Header[7] = iconName;
                }
                if (sortBy === 'serviceJob'){
                    $scope.Header[8] = iconName;
                }                   
                if (sortBy === 'location'){
                    $scope.Header[9] = iconName;
                }
                if (sortBy === 'lastSaved_sort'){
                    $scope.Header[10] = iconName;
                }  

                if (sortBy === 'lastSavedBy'){
                    $scope.Header[11] = iconName;
                }

                if (sortBy === 'Copy_Claim'){
                    $scope.Header[12] = iconName;
                }

                $scope.reverse = !$scope.reverse;
                console.log("$scope.reverse End" + '  ' +   $scope.reverse);
                //$scope.reverse = true;
            };


            $scope.resetAll = function () {
                // $scope.items=$scope.itemsCopy;
                $scope.filteredList = $scope.items;
                $scope.Header = ['', '', '', '', '', '', '', '', '', '', '', ''];
            }

            $scope.dateRangeSection = function(){
                $scope.showHideDateRange = true;
                $scope.showHideMonthRange =false;
                $scope.monthRange = 0;
            }

            $scope.monthRangeSection = function(){
                $scope.showHideDateRange = false;
                $scope.showHideMonthRange =true;
                $scope.selectedFirstRowFirstDate = '';
                $scope.selectedFirstRowSecondDate = '';
                $scope.monthRange = 6;
            }



        }]);
    </script>    
</apex:component>